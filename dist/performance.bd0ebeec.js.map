{"version":3,"sources":["../src/components/performance.js"],"names":["$","document","ready","pathParts","window","location","pathname","split","performanceId","indexOf","accessToken","localStorage","getItem","ajax","url","concat","SERVER_URL","type","success","performanceDetailResponseDto","console","log","performance","data","performanceListGridDiv","empty","getKoreanGenreName","genreType","openAt","openAtTime","Date","replace","updateCountdown","currentTime","timeDiff","removeClass","text","clearInterval","countdownInterval","days","Math","floor","hours","minutes","seconds","addClass","setInterval","performanceElement","title","imageUrl","venueName","startAt","endAt","runTime","ageGroup","description","append","xhrFields","withCredentials","crossDomain","headers","beforeSend","xhr","setRequestHeader","likeResponseDto","isLike","hide","show","attr","id","error","jqXHR","commentResponse","responseJSON","commentResponseText","responseText","alert","message","click","contentType","likeCreateResponse","boardResponse","off","on","likeId","likeDeleteResponse","selectedRate","isClicked","hover","rate","each","CommentResponseDto","comments","commnetListDiv","length","forEach","comment","index","commentElement","nickname","createdAt","perforamceTodayResponse","JSON","parse","requestData","val","stringify","commentCreateResponse","reload","$parentWrapper","$sessionWrapper"],"mappings":"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","file":"performance.bd0ebeec.js","sourceRoot":"../public","sourcesContent":["\n\n$(document).ready(function () {\n    // URL에서 performanceId 추출\n    const pathParts = window.location.pathname.split('/');\n    const performanceId = pathParts[pathParts.indexOf('performances') + 1];\n    const accessToken = localStorage.getItem('Authorization');\n\n    //[공연 조회]\n    $.ajax({\n        url: `${window.SERVER_URL}/performances/${performanceId}`,\n        type: 'GET',\n        success: function (performanceDetailResponseDto) {\n            console.log(performanceDetailResponseDto);\n\n            const performance = performanceDetailResponseDto.data;\n            const performanceListGridDiv = $('.performance-info-wrapper');\n\n            performanceListGridDiv.empty();\n\n            function getKoreanGenreName(genreType) {\n                switch (genreType) {\n                    case 'MUSICAL':\n                        return '뮤지컬';\n                    case 'CONCERT':\n                        return '콘서트';\n                    case 'FESTIVAL':\n                        return '페스티벌';\n                    case 'SPORTS':\n                        return '스포츠';\n                    case 'EXHIBITION':\n                        return '전시회';\n                    case 'CLASSIC':\n                        return '클래식/무용';\n                    case 'RANKING':\n                        return '랭크';\n                    default:\n                        return '공연'; // 기본값 설정\n                }\n            }\n            const openAt = performance.openAt;\n            // const currentTime = new Date();\n            const openAtTime = new Date(openAt.replace(\"-\", \"/\").replace(\"-\", \"/\")); // \"2024-07-31-19:00\"을 Date 객체로 변환\n    \n            function updateCountdown() {\n                const currentTime = new Date();\n                const timeDiff = openAtTime - currentTime;\n    \n                if (timeDiff <= 0) {\n                    $(\".reserveBtn\").removeClass(\"lock-btn\");\n                    $(\".reserveBtn\").text(\"예약 가능\");\n                    clearInterval(countdownInterval);\n                    return;\n                }\n    \n                const days = Math.floor(timeDiff / (1000 * 60 * 60 * 24));\n                const hours = Math.floor((timeDiff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n                const minutes = Math.floor((timeDiff % (1000 * 60 * 60)) / (1000 * 60));\n                const seconds = Math.floor((timeDiff % (1000 * 60)) / 1000);\n    \n                $(\".reserveBtn\").addClass(\"lock-btn\");\n                $(\".reserveBtn\").text(`${days}일 ${hours}시간 ${minutes}분 ${seconds}초 후 오픈 예정`);\n            }\n    \n            updateCountdown();\n            const countdownInterval = setInterval(updateCountdown, 1000);\n\n            const performanceElement = `\n                <div class=\"title-wrapper\">\n                    <span class=\"genre-type\">${getKoreanGenreName(performance.genreType)}</span>\n                    <span class=\"performance-title\">${performance.title}</span>\n                </div>\n                <div class=\"image-info-wrapper\">\n                    <img src=\"${performance.imageUrl}\">\n                    <div class=\"info-wrapper\">\n                        <div class=\"info-title-wrapper\">\n                            <span class=\"info-title\">장소</span>\n                            <span class=\"info-title\">공연기간</span>\n                            <span class=\"info-title\">공연시간</span>\n                            <span class=\"info-title\">관람연령</span>\n                            <span class=\"info-title\">가격</span>\n                        </div>\n                        <div class=\"info-detail-wrapper\">\n                            <span class=\"info-detail\">${performance.venueName}</span>\n                            <span class=\"info-detail\">${performance.startAt} ~ ${performance.endAt}</span>\n                            <span class=\"info-detail\">${performance.runTime}분</span>\n                            <span class=\"info-detail\">${performance.ageGroup}</span>\n                            <div class=\"seat-price-wrapper\">\n                                    <span class=\"info-seat\">VIP석</span>\n                                    <span class=\"info-price\">150,000원</span>\n                                </div>\n                                <div class=\"seat-price-wrapper\">\n                                    <span class=\"info-seat\">R석</span>\n                                    <span class=\"info-price\">130,000원</span>\n                                </div>\n                                <div class=\"seat-price-wrapper\">\n                                    <span class=\"info-seat\">S석</span>\n                                    <span class=\"info-price\">110,000원</span>\n                                </div>\n                                <div class=\"seat-price-wrapper\">\n                                    <span class=\"info-seat\">A석</span>\n                                    <span class=\"info-price\">90,000원</span>\n                                </div>\n                                </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"like-wrapper\">\n                    <img class=\"unlike\" src=\"https://ifh.cc/g/HCH5O9.png\" style=\"width: 24px; display: none;\">\n                    <img class=\"like\" data-id=\"\" src=\"https://ifh.cc/g/wGQQn7.png\" style=\"width: 24px; display: none;\">\n                    <span class=\"like-count\"></span>\n                </div>\n                <div class=\"description\">\"${performance.description}\"</div>\n                <div class=\"comment-info-wrapper\">\n                    <div class=\"comment-header\">\n                        <div class=\"text-wrapper-comment\">\n                            <span>총&nbsp;</span>\n                            <span class=\"comment-count\"></span>\n                            <span>개의 댓글이 있습니다.</span>\n                        </div>\n\n                        <div id=\"commentBtn\">댓글작성</div>\n\n                    </div>\n                    <div class=\"border-row\"></div>\n                        <div class=\"comment create-comment\">\n                            <div class=\"star-wrapper\">\n                                <img src=\"https://ifh.cc/g/9HJY7N.png\" data-rate=\"1\">\n                                <img src=\"https://ifh.cc/g/9HJY7N.png\" data-rate=\"2\">\n                                <img src=\"https://ifh.cc/g/9HJY7N.png\" data-rate=\"3\">\n                                <img src=\"https://ifh.cc/g/9HJY7N.png\" data-rate=\"4\">\n                                <img src=\"https://ifh.cc/g/9HJY7N.png\" data-rate=\"5\">\n                            </div>\n                            <div class=\"wrapper-label-input\">\n                                <input type=\"text\" id=\"commentTitle\" name=\"commentTitle\" placeholder=\"제목\" autocomplete=\"off\" required>\n                            </div>\n                            <textarea type=\"text\" id=\"commentDescription\" placeholder=\"내용\"></textarea>\n                            <div class=\"btn-wrapper\">\n                                <div id=\"createCommentBtn\">작성하기</div>\n                                <div id=\"cancelBtn\">취소</div>\n                            </div>\n                        </div>\n                    <div class=\"comment-list-wrapper\"></div>\n                </div>\n            `;\n            performanceListGridDiv.append(performanceElement);\n\n            //관심 공연 좋아요 여부\n            $.ajax({\n                url: `${window.SERVER_URL}/performances/${performanceId}/likes`,\n                type: 'GET',\n                xhrFields: {\n                    withCredentials: true // 필요 시 추가\n                },\n                crossDomain: true,\n                headers: {\n                    'Authorization': 'Bearer ' + accessToken // 헤더명 수정\n                },\n                beforeSend: function (xhr) {\n                    xhr.setRequestHeader('Authorization', accessToken); // 헤더명 수정\n                },\n                success: function (likeResponseDto) {\n                    console.log(likeResponseDto)\n\n                    if (likeResponseDto.data != null) {\n                        if (likeResponseDto.data.isLike) {\n                            $(\".unlike\").hide();\n                            $(\".like\").show();\n                            $(\".like\").attr(\"data-id\", likeResponseDto.data.id);\n                        } else {\n                            $(\".like\").hide();\n                            $(\".unlike\").show();\n                        }\n                    } else {\n                        $(\".like\").hide();\n                        $(\".unlike\").show();\n                    }\n                    // location.reload(); // 페이지 리로드\n                },\n                error: function (jqXHR) {\n                    const commentResponse = jqXHR.responseJSON;\n                    const commentResponseText = jqXHR.responseText;\n\n                    if (commentResponse != null) {\n                        alert(commentResponse.message);\n                    } else {\n                        alert(commentResponseText)\n                    }\n\n                }\n            });\n\n            // 좋아요 등록\n            $('.unlike').click(function () {\n\n                $.ajax({\n                    url: `${window.SERVER_URL}/performances/${performanceId}/likes`,\n                    type: 'POST',\n                    contentType: 'application/json',\n                    xhrFields: {\n                        withCredentials: true // 필요 시 추가\n                    },\n                    crossDomain: true,\n                    headers: {\n                        'Authorization': 'Bearer ' + accessToken // 헤더명 수정\n                    },\n                    beforeSend: function (xhr) {\n                        xhr.setRequestHeader('Authorization', accessToken); // 헤더명 수정\n                    },\n                    success: function (likeCreateResponse) {\n                        console.log(likeCreateResponse)\n                        // alert(likeCreateResponse.message)\n\n                        //관심 공연 좋아요 여부    \n                        $.ajax({\n                            url: `${window.SERVER_URL}/performances/${performanceId}/likes`,\n                            type: 'GET',\n                            xhrFields: {\n                                withCredentials: true // 필요 시 추가\n                            },\n                            crossDomain: true,\n                            headers: {\n                                'Authorization': 'Bearer ' + accessToken // 헤더명 수정\n                            },\n                            beforeSend: function (xhr) {\n                                xhr.setRequestHeader('Authorization', accessToken); // 헤더명 수정\n                            },\n                            success: function (likeResponseDto) {\n                                console.log(likeResponseDto)\n\n                                if (likeResponseDto.data != null) {\n                                    if (likeResponseDto.data.isLike) {\n                                        $(\".unlike\").hide();\n                                        $(\".like\").show();\n                                        $(\".like\").attr(\"data-id\", likeResponseDto.data.id);\n                                    } else {\n                                        $(\".like\").hide();\n                                        $(\".unlike\").show();\n                                    }\n                                } else {\n                                    $(\".like\").hide();\n                                    $(\".unlike\").show();\n                                }\n                                // location.reload(); // 페이지 리로드\n                            },\n                            error: function (jqXHR) {\n                                const commentResponse = jqXHR.responseJSON;\n                                const commentResponseText = jqXHR.responseText;\n\n                                if (commentResponse != null) {\n                                    alert(commentResponse.message);\n                                } else {\n                                    alert(commentResponseText)\n                                }\n\n                            }\n                        });\n\n                        //좋아요 개수 조회\n                        $.ajax({\n                            url: `${window.SERVER_URL}/performances/${performanceId}/likes-count`,\n                            type: 'GET',\n                            contentType: 'application/json',\n                            xhrFields: {\n                                withCredentials: true // 필요 시 추가\n                            },\n                            crossDomain: true,\n                            headers: {\n                                'Authorization': 'Bearer ' + accessToken // 헤더명 수정\n                            },\n                            beforeSend: function (xhr) {\n                                xhr.setRequestHeader('Authorization', accessToken); // 헤더명 수정\n                            },\n                            success: function (boardResponse) {\n                                console.log(boardResponse)\n                                $(\".like-count\").text(boardResponse.data + \"명이 관심있음\");\n                                // location.reload(); // 페이지 리로드\n                            },\n                            error: function (jqXHR) {\n                                const commentResponse = jqXHR.responseJSON;\n                                const commentResponseText = jqXHR.responseText;\n\n                                if (commentResponse != null) {\n                                    alert(commentResponse.message);\n                                } else {\n                                    alert(commentResponseText)\n                                }\n\n                            }\n                        });\n                    },\n                    error: function (jqXHR) {\n                        const commentResponse = jqXHR.responseJSON;\n                        const commentResponseText = jqXHR.responseText;\n\n                        if (commentResponse != null) {\n                            alert(commentResponse.message);\n                        } else {\n                            alert(commentResponseText)\n                        }\n\n                    }\n                });\n            });\n\n            // 좋아요 취소\n            $('.like').off('click').on('click', function () {\n                var likeId = $(this).attr('data-id'); // 변경된 부분\n                $.ajax({\n                    url: `${window.SERVER_URL}/performances/${performanceId}/likes/${likeId}`,\n                    type: 'DELETE',\n                    xhrFields: {\n                        withCredentials: true // 필요 시 추가\n                    },\n                    crossDomain: true,\n                    headers: {\n                        'Authorization': 'Bearer ' + accessToken // 헤더명 수정\n                    },\n                    beforeSend: function (xhr) {\n                        xhr.setRequestHeader('Authorization', accessToken); // 헤더명 수정\n                    },\n                    success: function (likeDeleteResponse) {\n                        console.log(likeDeleteResponse);\n                        // alert(likeDeleteResponse.message);\n\n                        // 관심 공연 좋아요 여부    \n                        $.ajax({\n                            url: `${window.SERVER_URL}/performances/${performanceId}/likes`,\n                            type: 'GET',\n                            xhrFields: {\n                                withCredentials: true // 필요 시 추가\n                            },\n                            crossDomain: true,\n                            headers: {\n                                'Authorization': 'Bearer ' + accessToken // 헤더명 수정\n                            },\n                            beforeSend: function (xhr) {\n                                xhr.setRequestHeader('Authorization', accessToken); // 헤더명 수정\n                            },\n                            success: function (likeResponseDto) {\n                                console.log(likeResponseDto);\n\n                                if (likeResponseDto.data != null) {\n                                    if (likeResponseDto.data.isLike) {\n                                        $(\".unlike\").hide();\n                                        $(\".like\").show();\n                                        $(\".like\").attr(\"data-id\", likeResponseDto.data.id); // 변경된 부분\n                                    } else {\n                                        $(\".like\").hide();\n                                        $(\".unlike\").show();\n                                    }\n                                } else {\n                                    $(\".like\").hide();\n                                    $(\".unlike\").show();\n                                }\n                                // location.reload(); // 페이지 리로드\n                            },\n                            error: function (jqXHR) {\n                                const commentResponse = jqXHR.responseJSON;\n                                const commentResponseText = jqXHR.responseText;\n\n                                if (commentResponse != null) {\n                                    alert(commentResponse.message);\n                                } else {\n                                    alert(commentResponseText);\n                                }\n                            }\n                        });\n\n                        // 좋아요 개수 조회\n                        $.ajax({\n                            url: `${window.SERVER_URL}/performances/${performanceId}/likes-count`,\n                            type: 'GET',\n                            contentType: 'application/json',\n                            xhrFields: {\n                                withCredentials: true // 필요 시 추가\n                            },\n                            crossDomain: true,\n                            headers: {\n                                'Authorization': 'Bearer ' + accessToken // 헤더명 수정\n                            },\n                            beforeSend: function (xhr) {\n                                xhr.setRequestHeader('Authorization', accessToken); // 헤더명 수정\n                            },\n                            success: function (boardResponse) {\n                                console.log(boardResponse);\n                                $(\".like-count\").text(boardResponse.data + \"명이 관심있음\");\n                                // location.reload(); // 페이지 리로드\n                            },\n                            error: function (jqXHR) {\n                                const commentResponse = jqXHR.responseJSON;\n                                const commentResponseText = jqXHR.responseText;\n\n                                if (commentResponse != null) {\n                                    alert(commentResponse.message);\n                                } else {\n                                    alert(commentResponseText);\n                                }\n                            }\n                        });\n                    },\n                    error: function (jqXHR) {\n                        const commentResponse = jqXHR.responseJSON;\n                        const commentResponseText = jqXHR.responseText;\n\n                        if (commentResponse != null) {\n                            alert(commentResponse.message);\n                        } else {\n                            alert(commentResponseText);\n                        }\n                    }\n                });\n            });\n\n\n\n\n            //좋아요 개수 조회\n            $.ajax({\n                url: `${window.SERVER_URL}/performances/${performanceId}/likes-count`,\n                type: 'GET',\n                contentType: 'application/json',\n                xhrFields: {\n                    withCredentials: true // 필요 시 추가\n                },\n                crossDomain: true,\n                headers: {\n                    'Authorization': 'Bearer ' + accessToken // 헤더명 수정\n                },\n                beforeSend: function (xhr) {\n                    xhr.setRequestHeader('Authorization', accessToken); // 헤더명 수정\n                },\n                success: function (boardResponse) {\n                    console.log(boardResponse)\n                    $(\".like-count\").text(boardResponse.data + \"명이 관심있음\");\n                    // location.reload(); // 페이지 리로드\n                },\n                error: function (jqXHR) {\n                    const commentResponse = jqXHR.responseJSON;\n                    const commentResponseText = jqXHR.responseText;\n\n                    if (commentResponse != null) {\n                        alert(commentResponse.message);\n                    } else {\n                        alert(commentResponseText)\n                    }\n\n                }\n            });\n\n\n\n\n\n\n\n\n\n\n            //댓글 작성 버튼이 생긴 후, 클릭 효과 주기\n            $(\"#commentBtn\").on('click', function () {\n                $(\".comment.create-comment\").show();\n            });\n\n            $(\"#cancelBtn\").on('click', function () {\n                $(\".comment.create-comment\").hide();\n            });\n\n\n            //별 클릭 효과\n            var selectedRate = 0;\n            var isClicked = false;\n\n\n            $('.star-wrapper img').hover(function () {\n                if (!isClicked) {\n                    var rate = $(this).data('rate');\n                    $('.star-wrapper img').each(function () {\n                        if ($(this).data('rate') <= rate) {\n                            $(this).attr('src', 'https://ifh.cc/g/dQCKxt.png');\n                        } else {\n                            $(this).attr('src', 'https://ifh.cc/g/9HJY7N.png');\n                        }\n                    });\n                }\n            }, function () {\n                if (!isClicked) {\n                    // 마우스가 벗어났을 때 고정된 이미지를 제외하고 초기화\n                    $('.star-wrapper img').each(function () {\n                        if ($(this).data('rate') <= selectedRate) {\n                            $(this).attr('src', 'https://ifh.cc/g/dQCKxt.png');\n                        } else {\n                            $(this).attr('src', 'https://ifh.cc/g/9HJY7N.png');\n                        }\n                    });\n                }\n            });\n\n\n            // 클릭 시 고정\n            $('.star-wrapper img').click(function () {\n                selectedRate = $(this).data('rate');\n                isClicked = true;\n\n                $('.star-wrapper img').removeClass('selected');\n\n                $(this).addClass('selected');\n                $('.star-wrapper img').each(function () {\n                    if ($(this).data('rate') <= selectedRate) {\n                        $(this).attr('src', 'https://ifh.cc/g/dQCKxt.png');\n                    } else {\n                        $(this).attr('src', 'https://ifh.cc/g/9HJY7N.png');\n                    }\n                });\n            });\n\n\n            // [댓글 조회]\n            $.ajax({\n                url: `${window.SERVER_URL}/performances/${performanceId}/comments`,\n                type: 'GET',\n                success: function (CommentResponseDto) {\n                    console.log(CommentResponseDto);\n\n                    const comments = CommentResponseDto.data;\n                    const commnetListDiv = $('.comment-list-wrapper');\n\n\n                    $(\".comment-count\").text(comments.length)\n\n                    commnetListDiv.empty();\n\n                    comments.forEach((comment, index) => {\n                        const commentElement = `\n                            <div class=\"comment\">\n                                <div class=\"comment-header\">\n                                    <div class=\"comment-rate\" data-rate=\"${comment.rate}\"></div>\n                                    <div class=\"user-info-wrapper\">\n                                        <span>${comment.nickname}</span>\n                                        <div class=\"border-line\" style=\"margin: 0;\"></div>\n                                        <span>${comment.createdAt}</span>\n                                    </div>\n                                </div>\n                                <p class=\"comment-title\">${comment.title}</p>\n                                <p class=\"comment-description\">${comment.description}</p>\n                            </div>\n                        `;\n                        commnetListDiv.append(commentElement);\n\n                    });\n\n\n                },\n                error: function (xhr) {\n                    const perforamceTodayResponse = JSON.parse(xhr.responseText);\n                    console.log(perforamceTodayResponse.message);\n                }\n            });\n\n\n            //댓글 생성\n            $('#createCommentBtn').click(function () {\n                console.log(selectedRate)\n                const requestData = {\n                    title: $('#commentTitle').val(),\n                    description: $('#commentDescription').val(),\n                    rate: selectedRate\n                };\n\n                $.ajax({\n                    url: `${window.SERVER_URL}/performances/${performanceId}/comments`,\n                    type: 'POST',\n                    contentType: 'application/json',\n                    data: JSON.stringify(requestData),\n                    xhrFields: {\n                        withCredentials: true // 필요 시 추가\n                    },\n                    crossDomain: true,\n                    headers: {\n                        'Authorization': 'Bearer ' + accessToken // 헤더명 수정\n                    },\n                    beforeSend: function (xhr) {\n                        xhr.setRequestHeader('Authorization', accessToken); // 헤더명 수정\n                    },\n                    success: function (commentCreateResponse) {\n                        console.log(commentCreateResponse)\n                        alert(commentCreateResponse.message)\n                        location.reload(); // 페이지 리로드\n                    },\n                    error: function (jqXHR) {\n                        const commentResponse = jqXHR.responseJSON;\n                        const commentResponseText = jqXHR.responseText;\n\n                        if (commentResponse != null) {\n                            alert(commentResponse.message);\n                        } else {\n                            alert(commentResponseText)\n                        }\n\n                    }\n                });\n            });\n\n\n        },\n        error: function (xhr) {\n            const perforamceTodayResponse = JSON.parse(xhr.responseText);\n            console.log(perforamceTodayResponse.message);\n        }\n\n    });\n\n    //예약하기 스크롤에 맞게 따라오기\n    // 예약하기 스크롤에 맞게 따라오기\n    var $parentWrapper = $('.parent-wrapper');\n    var $sessionWrapper = $('.session-info-wrapper');\n\n    // // DOM 요소가 존재하는지 확인\n    // if ($parentWrapper.length && $sessionWrapper.length) {\n    //     var parentTop = $parentWrapper.offset().top;\n    //     var parentHeight = $parentWrapper.height();\n    //     var sessionHeight = $sessionWrapper.height();\n\n    //     $(window).on('scroll', function () {\n    //         var scrollPosition = $(window).scrollTop();\n    //         var maxScroll = parentTop + parentHeight - sessionHeight - 70; // 부모 요소의 범위 내에서 스크롤 가능한 최대 값\n\n    //         if (scrollPosition >= parentTop && scrollPosition <= maxScroll) {\n    //             $sessionWrapper.css({\n    //                 'top': (scrollPosition - parentTop + 70) + 'px'\n    //             });\n    //         } else if (scrollPosition < parentTop) {\n    //             $sessionWrapper.css({\n    //                 'top': '70px'\n    //             });\n    //         } else {\n    //             $sessionWrapper.css({\n    //                 'top': (parentHeight - sessionHeight) + 'px'\n    //             });\n    //         }\n    //     });\n    // } else {\n    //     console.error(\"parent-wrapper 또는 session-info-wrapper 요소를 찾을 수 없습니다.\");\n    // }\n\n\n\n});"]}