{"version":3,"sources":["../src/components/home.js"],"names":["$","document","ready","loadPerformances","page","ajax","url","concat","window","SERVER_URL","type","success","PerforamceTodayResponseDto","console","log","performances","data","performanceListGridDiv","empty","forEach","performance","openTime","openAt","split","pop","openDateTime","Date","replace","isOpen","todayOpenElement","id","imageUrl","genreType","getKoreanGenreName","title","venueName","startAt","append","hide","show","hover","find","fadeOut","fadeIn","error","xhr","perforamceTodayResponse","JSON","parse","responseText","message","loadRecommandPerformances","PerformanceRecommendResponseDto","performanceRecommendResponse","loadRankingPerformances","PerformanceGenreRankResponseDto","performanceListFlexDiv","index","genreRankElement","getScript","done","script","textStatus","fail","jqxhr","settings","exception","setupPagination","containerSelector","loadFunction","on","pageNumber","text","removeClass","addClass","BannerResponseDto","mainBanners","mainBannerListFlexDiv","mainBannerDotsDiv","mainBanner","linkUrl","bannerImageUrl","middleBanners","length","highestPositionBanner","reduce","prev","current","position","middleBannerElement","isActive","hasClass","css"],"mappings":"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","file":"home.fff47446.js","sourceRoot":"../public","sourcesContent":["$(document).ready(function () {\n    //[ 메인 배너 ]\n    $.ajax({\n        url: `${window.SERVER_URL}/banners?bannerType=MAIN`,\n        type: 'GET',\n        success: function (BannerResponseDto) {\n            console.log(BannerResponseDto)\n\n            const mainBanners = BannerResponseDto.data;\n            const mainBannerListFlexDiv = $('.slider-container > .slider');\n            const mainBannerDotsDiv = $('.dots');\n\n            mainBannerListFlexDiv.empty();\n\n            mainBanners.forEach((mainBanner, index) => {\n                const genreRankElement = `\n                        <a href=\"${mainBanner.linkUrl}\">\n                            <img src=\"${mainBanner.bannerImageUrl}\" data-url=\"${mainBanner.linkUrl}\">\n                        </a>\n                    `;\n                mainBannerListFlexDiv.append(genreRankElement);\n\n                const dotElement = `\n                        <span class=\"dot\"></span>\n                        `;\n                mainBannerDotsDiv.append(dotElement);\n            });\n            $.getScript('/main-banner.12c41341.js')\n                .done(function (script, textStatus) {\n                    console.log('main-banner.js 스크립트가 성공적으로 로드되었습니다.');\n                })\n                .fail(function (jqxhr, settings, exception) {\n                    console.log('genre-rank-swiper.js 스크립트 로드에 실패했습니다.');\n                });\n        },\n        error: function (xhr) {\n            const perforamceTodayResponse = JSON.parse(xhr.responseText);\n            console.log(perforamceTodayResponse.message);\n        }\n    });\n\n    //[ 미들 배너 ]\n    $.ajax({\n        url: `${window.SERVER_URL}/banners?bannerType=MIDDLE`,\n        type: 'GET',\n        success: function (BannerResponseDto) {\n            console.log(BannerResponseDto);\n\n            const middleBanners = BannerResponseDto.data;\n            const mainBannerListFlexDiv = $('.middle-banner');\n\n            mainBannerListFlexDiv.empty();\n\n            // 포지션 값이 가장 높은 배너 찾기\n            if (middleBanners.length > 0) {\n                const highestPositionBanner = middleBanners.reduce((prev, current) => {\n                    return (prev.position > current.position) ? prev : current;\n                });\n\n                const middleBannerElement = `\n                    <a href=\"${highestPositionBanner.linkUrl}\">\n                        <img src=\"${highestPositionBanner.bannerImageUrl}\" data-url=\"${highestPositionBanner.linkUrl}\">\n                    </a>\n                `;\n                mainBannerListFlexDiv.append(middleBannerElement);\n            }\n        },\n        error: function (xhr) {\n            const perforamceTodayResponse = JSON.parse(xhr.responseText);\n            console.log(perforamceTodayResponse.message);\n        }\n    });\n\n    //[ 바텀 배너 ]\n    $.ajax({\n        url: `${window.SERVER_URL}/banners?bannerType=BOTTOM`,\n        type: 'GET',\n        success: function (BannerResponseDto) {\n            console.log(BannerResponseDto);\n\n            const middleBanners = BannerResponseDto.data;\n            const mainBannerListFlexDiv = $('.bottom-banner');\n\n            mainBannerListFlexDiv.empty();\n\n            // 포지션 값이 가장 높은 배너 찾기\n            if (middleBanners.length > 0) {\n                const highestPositionBanner = middleBanners.reduce((prev, current) => {\n                    return (prev.position > current.position) ? prev : current;\n                });\n\n                const middleBannerElement = `\n                        <a href=\"${highestPositionBanner.linkUrl}\">\n                            <img src=\"${highestPositionBanner.bannerImageUrl}\" data-url=\"${highestPositionBanner.linkUrl}\">\n                        </a>\n                    `;\n                mainBannerListFlexDiv.append(middleBannerElement);\n            }\n        },\n        error: function (xhr) {\n            const perforamceTodayResponse = JSON.parse(xhr.responseText);\n            console.log(perforamceTodayResponse.message);\n        }\n    });\n\n\n    //[ 오늘 오픈 ]\n    function loadPerformances(page) {\n        $.ajax({\n            url: `${window.SERVER_URL}/performances/today-open?page=${page}&size=10`,\n            type: 'GET',\n            success: function (PerforamceTodayResponseDto) {\n                console.log(PerforamceTodayResponseDto);\n\n                const performances = PerforamceTodayResponseDto.data;\n                const performanceListGridDiv = $('.main-today-open > .performance-list-grid');\n\n                function getKoreanGenreName(genreType) {\n                    switch (genreType) {\n                        case 'MUSICAL':\n                            return '뮤지컬';\n                        case 'CONCERT':\n                            return '콘서트';\n                        case 'FESTIVAL':\n                            return '페스티벌';\n                        case 'SPORTS':\n                            return '스포츠';\n                        case 'EXHIBITION':\n                            return '전시회';\n                        case 'CLASSIC':\n                            return '클래식/무용';\n                        case 'RANKING':\n                            return '랭크';\n                        default:\n                            return '공연'; // 기본값 설정\n                    }\n                }\n\n                performanceListGridDiv.empty();\n\n                performances.forEach(performance => {\n                    // \"2024-07-26-19:00\" 형식에서 시간 부분만 추출\n                    const openTime = performance.openAt.split('-').pop();\n                    const openDateTime = new Date(performance.openAt.replace(/-/g, '/')); // Date 객체 생성\n                    const now = new Date(); // 현재 시간\n\n                    // 현재 시간이 openAt 시간을 지났는지 확인\n                    const isOpen = now >= openDateTime ? 'open' : '';\n\n                    const todayOpenElement = `\n                        <div class=\"performance-info\" data-id=\"${performance.id}\">\n                            <a href=\"/performances/${performance.id}\">\n                                <div class=\"image-wrapper today-open-temp\">\n                                    <div class=\"before-wrapper ${isOpen}\">\n                                        <span class=\"today\">오늘</span>\n                                        <span class=\"open-time fs-28\">${openTime}</span>\n                                    </div>\n                                    <img src=\"${performance.imageUrl}\">\n                                </div>\n                            </a>\n                            <span class=\"performance-genre\">${getKoreanGenreName(performance.genreType)}</span>\n                            <p class=\"performance-title fs-17 bold\">${performance.title}</p>\n                            <p class=\"venue-location fs-15 medium\">${performance.venueName}</p>\n                            <p class=\"performance-date fs-15 medium\">${performance.startAt}</p>\n                        </div>\n                    `;\n\n                    performanceListGridDiv.append(todayOpenElement);\n\n\n                    if (isOpen) {\n                        $(\".before-wrapper\").hide()\n                    } else {\n                        $(\".before-wrapper\").show()\n                        $('.performance-info').hover(\n                            function () {\n                                $(this).find('.before-wrapper').fadeOut(100);\n                            },\n                            function () {\n                                $(this).find('.before-wrapper').fadeIn(100);\n                            }\n                        );\n                    }\n                });\n            },\n            error: function (xhr) {\n                const perforamceTodayResponse = JSON.parse(xhr.responseText);\n                console.log(perforamceTodayResponse.message);\n            }\n        });\n    }\n\n    //[ 추천 티켓 ]\n    function loadRecommandPerformances(page) {\n        $.ajax({\n            url: `${window.SERVER_URL}/performances/recommend?page=${page}&size=4`,\n            type: 'GET',\n            success: function (PerformanceRecommendResponseDto) {\n                console.log(PerformanceRecommendResponseDto);\n\n                const performances = PerformanceRecommendResponseDto.data;\n                const performanceListGridDiv = $('.main-recommand > .performance-list-grid');\n\n                performanceListGridDiv.empty();\n\n                performances.forEach(performance => {\n                    const todayOpenElement = `\n                            <div class=\"performance-info\" data-id=\"${performance.id}\">\n                                <a href=\"/performances/${performance.id}\">\n                                    <div class=\"image-wrapper\">\n                                        <img src=\"${performance.imageUrl}\">\n                                    </div>\n                                </a>\n                                <p class=\"performance-title fs-17 bold\">${performance.title}</p>\n                                <p class=\"venue-location fs-15 medium\">${performance.venueName}</p>\n                                <p class=\"performance-date fs-15 medium\">${performance.startAt}</p>\n                            </div>\n                        `;\n                    performanceListGridDiv.append(todayOpenElement);\n                });\n            },\n            error: function (xhr) {\n                const performanceRecommendResponse = JSON.parse(xhr.responseText);\n                console.log(performanceRecommendResponse.message);\n            }\n        });\n    }\n\n    //[ 장르별 랭킹 ]\n    function loadRankingPerformances(genreType) {\n        $.ajax({\n            url: `${window.SERVER_URL}/performances/ranking?genre=${genreType}&page=1&size=10`,\n            type: 'GET',\n            success: function (PerformanceGenreRankResponseDto) {\n                console.log(PerformanceGenreRankResponseDto);\n\n                const performances = PerformanceGenreRankResponseDto.data;\n                const performanceListFlexDiv = $('.performance-list-genre');\n\n                performanceListFlexDiv.empty();\n\n                performances.forEach((performance, index) => {\n                    const genreRankElement = `\n                                <div class=\"performance-info\" data-id=\"${performance.id}\">\n                                    <a href=\"/performances/${performance.id}\">\n                                        <div class=\"image-wrapper\">\n                                            <span class=\"rank absolute fs-28\">${index + 1}</span>\n                                            <img src=\"${performance.imageUrl}\">\n                                        </div>\n                                    </a>\n                                    <p class=\"performance-title fs-17 bold\">${performance.title}</p>\n                                    <p class=\"venue-location fs-15 medium\">${performance.venueName}</p>\n                                    <p class=\"performance-date fs-15 medium\">${performance.startAt}</p>\n                                </div>\n                            `;\n                    performanceListFlexDiv.append(genreRankElement);\n                });\n\n                $.getScript('/main-rank-swiper.98f54644.js')\n                    .done(function (script, textStatus) {\n                        console.log('main-rank-swiper.js 스크립트가 성공적으로 로드되었습니다.');\n                    })\n                    .fail(function (jqxhr, settings, exception) {\n                        console.log('main-rank-swiper.js 스크립트 로드에 실패했습니다.');\n                    });\n\n            },\n            error: function (xhr) {\n                const perforamceTodayResponse = JSON.parse(xhr.responseText);\n                console.log(perforamceTodayResponse.message);\n            }\n        });\n    }\n\n    // [ 오늘 오픈 / 추천 티켓 ] 호출\n    loadPerformances(1);\n    loadRecommandPerformances(1);\n    loadRankingPerformances(\"CONCERT\")\n\n\n    //[ page 버튼 클릭 시, 어떤 컨테이너 안에서 눌린 넘버인지 확인하는 메서드 ]\n    function setupPagination(containerSelector, loadFunction) {\n        $(containerSelector).on('click', '.page-num', function () {\n            console.log(\"test\")\n            var pageNumber = $(this).text();\n\n            $(containerSelector + ' > .page-wrapper > .page-num').removeClass('active');\n            $(this).addClass('active');\n\n            loadFunction(pageNumber);\n        });\n    }\n\n    setupPagination('.main-today-open', loadPerformances);\n    setupPagination('.main-recommand', loadRecommandPerformances);\n\n    // 장르별 인기순위 장르 버튼 클릭 시, active 주기\n    $('.genre-btn').on('click', function () {\n        var genreType = $(this).data('genre');\n        var isActive = $(this).hasClass('active');\n\n        $('.genre-btn').removeClass('active');\n        $(this).addClass('active');\n\n        loadRankingPerformances(genreType);\n\n        if (!isActive) {\n            $('.slider-wrapper').css('transform', 'translateX(0)');\n        }\n    });\n\n\n\n});\n"]}