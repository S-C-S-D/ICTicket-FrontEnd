{"version":3,"sources":["../src/components/genre-rank-swiper.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"genre-rank-swiper.0be238a9.js","sourceRoot":"../public","sourcesContent":["// $(document).ready(function() {\n//     const $container = $('.gerne-ranking > .slider-container-rank > .slider-wrapper');\n//     const $btnLeft = $('.gerne-ranking > .slider-container-rank > .nav-button.left');\n//     const $btnRight = $('.gerne-ranking > .slider-container-rank > .nav-button.right');\n//     let currentIndex = 0;\n//     const itemsToShow = 4;\n//     const gap = parseInt($('.performance-list-genre').css('gap')) || 0;\n\n//     const updateSliderPosition = () => {\n//         const $items = $container.find('.performance-info'); // 슬라이더 아이템 재초기화\n//         const itemWidth = $items.first().outerWidth() + gap;\n//         $container.css('transform', `translateX(-${currentIndex * itemWidth}px)`);\n//         updateButtonStates();\n//     };\n\n//     const updateButtonStates = () => {\n//         const $items = $container.find('.performance-info'); // 슬라이더 아이템 재초기화\n//         $btnLeft.prop('disabled', currentIndex <= 0);\n//         $btnRight.prop('disabled', currentIndex >= $items.length - itemsToShow);\n//     };\n\n//     $btnRight.off('click'); // 기존 이벤트 핸들러 제거\n//     $btnRight.on('click', () => {\n//         const $items = $container.find('.performance-info'); // 슬라이더 아이템 재초기화\n//         if (currentIndex < $items.length - itemsToShow) {\n//             currentIndex++;\n//             updateSliderPosition();\n//         }\n//     });\n\n//     $btnLeft.off('click'); // 기존 이벤트 핸들러 제거\n//     $btnLeft.on('click', () => {\n//         if (currentIndex > 0) {\n//             currentIndex--;\n//             updateSliderPosition();\n//         }\n//     });\n\n//     let isDragging = false;\n//     let dragStartX = 0;\n\n//     $container.off('mousedown'); // 기존 이벤트 핸들러 제거\n//     $container.on('mousedown', (e) => {\n//         isDragging = true;\n//         dragStartX = e.pageX;\n//         e.preventDefault(); // 기본 드래그 앤 드롭 기능 비활성화\n//     });\n\n//     $(document).off('mouseup'); // 기존 이벤트 핸들러 제거\n//     $(document).on('mouseup', (e) => {\n//         if (isDragging) {\n//             isDragging = false;\n//             const dragEndX = e.pageX;\n//             const dragDistance = dragEndX - dragStartX;\n//             const $items = $container.find('.performance-info'); // 슬라이더 아이템 재초기화\n//             const itemWidth = $items.first().outerWidth() + gap;\n\n//             if (Math.abs(dragDistance) > itemWidth / 2) {\n//                 if (dragDistance < 0 && currentIndex < $items.length - itemsToShow) {\n//                     currentIndex++;\n//                 } else if (dragDistance > 0 && currentIndex > 0) {\n//                     currentIndex--;\n//                 }\n//             }\n//             updateSliderPosition(); // 마우스 버튼을 놓았을 때 슬라이드 상태 업데이트\n//         }\n//     });\n\n//     updateSliderPosition();\n\n//     // 윈도우 리사이즈 시 슬라이더 재초기화\n//     $(window).off('resize'); // 기존 이벤트 핸들러 제거\n//     $(window).on('resize', () => {\n//         updateSliderPosition();\n//     });\n// });\n"]}