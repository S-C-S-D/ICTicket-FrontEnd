{"version":3,"sources":["../src/components/main-rank-swiper.js"],"names":["$","document","ready","$container","$btnLeft","$btnRight","$dotsContainer","currentIndex","gap","parseInt","css","updateSliderPosition","itemWidth","find","first","outerWidth","concat","updateButtonStates","updateDots","$items","prop","length","removeClass","eq","addClass","off","on","index","data","undefined","startX","isDragging","e","pageX","preventDefault","endX","diff","empty","totalDots","Math","ceil","i","$dot","append","additionalDots","$extraDot","createDots","window"],"mappings":";AAAAA,EAAEC,UAAUC,MAAM,WACd,IAAMC,EAAaH,EAAE,kEACfI,EAAWJ,EAAE,mEACbK,EAAYL,EAAE,oEACdM,EAAiBN,EAAE,mBACrBO,EAAe,EAEbC,EAAMC,SAAST,EAAE,2BAA2BU,IAAI,SAAW,EAE3DC,EAAuB,WACzB,IACMC,EADST,EAAWU,KAAK,qBACNC,QAAQC,aAAeP,EAChDL,EAAWO,IAAI,YAAWM,eAAAA,OAAiBT,EAAeK,EAAc,QACxEK,IACAC,KAGED,EAAqB,WACvB,IAAME,EAAShB,EAAWU,KAAK,qBAC/BT,EAASgB,KAAK,WAAYb,GAAgB,GAC1CF,EAAUe,KAAK,WAAYb,GAAgBY,EAAOE,OAdlC,IAkCdH,EAAa,WACflB,EAAE,aAAasB,YAAY,UAC3BtB,EAAE,aAAauB,GAAGhB,GAAciB,SAAS,WAG7ClB,EAAemB,IAAI,QAAS,aAC5BnB,EAAeoB,GAAG,QAAS,YAAa,WACpC,IAAMC,EAAQ3B,EAAE,MAAM4B,KAAK,cACbC,IAAVF,IACApB,EAAeoB,EACfhB,OAIRN,EAAUoB,IAAI,SACdpB,EAAUqB,GAAG,QAAS,WAClB,IAAMP,EAAShB,EAAWU,KAAK,qBAC3BN,EAAeY,EAAOE,OAnDV,IAoDZd,IACAI,OAIRP,EAASqB,IAAI,SACbrB,EAASsB,GAAG,QAAS,WACbnB,EAAe,IACfA,IACAI,OAIR,IAAImB,EAAQC,GAAa,EAEzB5B,EAAWsB,IAAI,aACftB,EAAWuB,GAAG,YAAa,SAACM,GACxBF,EAASE,EAAEC,MACXF,GAAa,EACbC,EAAEE,mBAGNlC,EAAEC,UAAUwB,IAAI,WAChBzB,EAAEC,UAAUyB,GAAG,UAAW,SAACM,GACvB,GAAID,EAAY,CACZA,GAAa,EAEb,IAAMI,EAAOH,EAAEC,MACTG,EAAON,EAASK,EAClBC,EAAO,IAAM7B,EAAeJ,EAAWU,KAAK,qBAAqBQ,OAjFzD,EAkFRd,IACO6B,GAAQ,IAAM7B,EAAe,GACpCA,IAEJI,IACAqB,EAAEE,oBAIV/B,EAAWsB,IAAI,aACftB,EAAWuB,GAAG,YAAa,SAACM,GACpBD,GACAC,EAAEE,mBA7ES,WACf5B,EAAe+B,QAGf,IAFA,IAAMlB,EAAShB,EAAWU,KAAK,qBACzByB,EAAYC,KAAKC,KAAKrB,EAAOE,OApBnB,GAqBPoB,EAAI,EAAGA,EAAIH,EAAWG,IAAK,CAChC,IAAMC,EAAO1C,EAAE,SAASwB,SAAS,YAAYI,KAAK,QAASa,GACjD,IAANA,GAASC,EAAKlB,SAAS,UAC3BlB,EAAeqC,OAAOD,GAI1B,IADA,IAAME,EAAiBzB,EAAOE,OAAS,EAAIiB,EAClCG,EAAI,EAAGA,EAAIG,EAAgBH,IAAK,CACrC,IAAMI,EAAY7C,EAAE,SAASwB,SAAS,YAAYI,KAAK,QAASU,EAAYG,GAC5EnC,EAAeqC,OAAOE,IAqE9BC,GACAnC,IAGAX,EAAE+C,QAAQtB,IAAI,UACdzB,EAAE+C,QAAQrB,GAAG,SAAU,WACnBf","file":"main-rank-swiper.5e99a39e.js","sourceRoot":"../public","sourcesContent":["$(document).ready(function() {\n    const $container = $('.main-genre-ranking > .slider-container-rank > .slider-wrapper');\n    const $btnLeft = $('.main-genre-ranking > .slider-container-rank > .nav-button.left');\n    const $btnRight = $('.main-genre-ranking > .slider-container-rank > .nav-button.right');\n    const $dotsContainer = $('.dots-container');\n    let currentIndex = 0;\n    const itemsToShow = 5;\n    const gap = parseInt($('.performance-list-genre').css('gap')) || 0;\n\n    const updateSliderPosition = () => {\n        const $items = $container.find('.performance-info'); // 슬라이더 아이템 재초기화\n        const itemWidth = $items.first().outerWidth() + gap;\n        $container.css('transform', `translateX(-${currentIndex * itemWidth}px)`);\n        updateButtonStates();\n        updateDots();\n    };\n\n    const updateButtonStates = () => {\n        const $items = $container.find('.performance-info'); // 슬라이더 아이템 재초기화\n        $btnLeft.prop('disabled', currentIndex <= 0);\n        $btnRight.prop('disabled', currentIndex >= $items.length - itemsToShow);\n    };\n\n    const createDots = () => {\n        $dotsContainer.empty(); // 기존 dot 제거\n        const $items = $container.find('.performance-info'); // 슬라이더 아이템 재초기화\n        const totalDots = Math.ceil($items.length / itemsToShow);\n        for (let i = 0; i < totalDots; i++) {\n            const $dot = $('<div>').addClass('dot-rank').data('index', i);\n            if (i === 0) $dot.addClass('active');\n            $dotsContainer.append($dot);\n        }\n        // 추가 dot 생성\n        const additionalDots = $items.length - 4 - totalDots;\n        for (let i = 0; i < additionalDots; i++) {\n            const $extraDot = $('<div>').addClass('dot-rank').data('index', totalDots + i);\n            $dotsContainer.append($extraDot);\n        }\n    };\n\n    const updateDots = () => {\n        $('.dot-rank').removeClass('active');\n        $('.dot-rank').eq(currentIndex).addClass('active');\n    };\n\n    $dotsContainer.off('click', '.dot-rank'); // 기존 이벤트 핸들러 제거\n    $dotsContainer.on('click', '.dot-rank', function () {\n        const index = $(this).data('index');\n        if (index !== undefined) {\n            currentIndex = index;\n            updateSliderPosition();\n        }\n    });\n\n    $btnRight.off('click'); // 기존 이벤트 핸들러 제거\n    $btnRight.on('click', () => {\n        const $items = $container.find('.performance-info'); // 슬라이더 아이템 재초기화\n        if (currentIndex < $items.length - itemsToShow) {\n            currentIndex++;\n            updateSliderPosition();\n        }\n    });\n\n    $btnLeft.off('click'); // 기존 이벤트 핸들러 제거\n    $btnLeft.on('click', () => {\n        if (currentIndex > 0) {\n            currentIndex--;\n            updateSliderPosition();\n        }\n    });\n\n    let startX, isDragging = false;\n\n    $container.off('mousedown'); // 기존 이벤트 핸들러 제거\n    $container.on('mousedown', (e) => {\n        startX = e.pageX;\n        isDragging = true;\n        e.preventDefault(); // 기본 드래그 앤 드롭 기능 비활성화\n    });\n\n    $(document).off('mouseup'); // 기존 이벤트 핸들러 제거\n    $(document).on('mouseup', (e) => {\n        if (isDragging) {\n            isDragging = false;\n            // 드래그 거리가 50px 이상일 때만 이동\n            const endX = e.pageX;\n            const diff = startX - endX;\n            if (diff > 50 && currentIndex < $container.find('.performance-info').length - itemsToShow) {\n                currentIndex++;\n            } else if (diff < -50 && currentIndex > 0) {\n                currentIndex--;\n            }\n            updateSliderPosition(); // 마우스 버튼을 놓았을 때 슬라이드 상태 업데이트\n            e.preventDefault(); // 기본 드래그 앤 드롭 기능 비활성화\n        }\n    });\n\n    $container.off('mousemove'); // 기존 이벤트 핸들러 제거\n    $container.on('mousemove', (e) => {\n        if (isDragging) {\n            e.preventDefault(); // 기본 드래그 앤 드롭 기능 비활성화\n        }\n    });\n\n    // 초기화 작업\n    createDots();\n    updateSliderPosition();\n\n    // 윈도우 리사이즈 시 슬라이더 재초기화\n    $(window).off('resize'); // 기존 이벤트 핸들러 제거\n    $(window).on('resize', () => {\n        updateSliderPosition();\n    });\n});\n"]}