{"version":3,"sources":["../src/components/mypage.js"],"names":["$","document","ready","accessToken","localStorage","getItem","ajax","url","type","xhrFields","withCredentials","crossDomain","headers","beforeSend","xhr","setRequestHeader","success","userProfileResponseDto","console","log","userData","data","commnetListDiv","empty","userDataElement","concat","nickname","email","address","phoneNumber","orderCount","append","loadOrders","userId","orderResponseDto","orders","orderListDiv","forEach","order","index","sessionDateTime","sessionDate","sessionTime","slice","genreRankElement","orderDate","performanceId","imageUrl","genreType","getKoreanGenreName","title","startAt","endAt","orderNumber","ticketCount","orderStatus","getKoreanOrderStatus","orderId","find","hide","click","confirmCancel","confirm","alert","error","jqXHR","commentResponse","responseJSON","commentResponseText","responseText","message","orderResponse","orderResponseText","id"],"mappings":"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","file":"mypage.31694547.js","sourceRoot":"../public","sourcesContent":["$(document).ready(function () {\n\n    const accessToken = localStorage.getItem('Authorization');\n    //프로필 불러오기\n    $.ajax({\n        url: `http://localhost:8080/users/profile`,\n        type: 'GET',\n        xhrFields: {\n            withCredentials: true // 필요 시 추가\n        },\n        crossDomain: true,\n        headers: {\n            'Authorization': 'Bearer ' + accessToken // 헤더명 수정\n        },\n        beforeSend: function (xhr) {\n            xhr.setRequestHeader('Authorization', accessToken); // 헤더명 수정\n        },\n        success: function (userProfileResponseDto) {\n            console.log(userProfileResponseDto)\n            \n            const userData = userProfileResponseDto.data;\n            const commnetListDiv = $('.user-profile');\n\n            commnetListDiv.empty();\n\n            const userDataElement = `\n                <div class=\"flex-group\">\n                <img src=\"https://ifh.cc/g/7kQYpA.png\">\n                    <div class=\"user-info-wrap\">\n                        <span class=\"user-nickname\">${userData.nickname}</span>\n                        <span class=\"user-email\">${userData.email}</span>\n                        <span class=\"user-address\">${userData.address}</span>\n                        <span class=\"user-phonenumber\">${userData.phoneNumber}</span>\n                    </div>\n                </div>\n                <div class=\"order-count-wrap\">\n                    <span class=\"order-count\">${userData.orderCount}</span>\n                    <span class=\"order-text\">예매내역</span>\n                </div>\n            `;\n            commnetListDiv.append(userDataElement);\n            loadOrders(userData.id);\n\n        },\n        error: function (jqXHR) {\n            const commentResponse = jqXHR.responseJSON;\n            const commentResponseText = jqXHR.responseText;\n\n            if (commentResponse != null) {\n                alert(commentResponse.message);\n            } else {\n                alert(commentResponseText)\n            }\n\n        }\n    });\n\n     // 예매내역 불러오기 함수\n     function loadOrders(userId) {\n        $.ajax({\n            url: `http://localhost:8080/users/${userId}/orders`,\n            type: 'GET',\n            xhrFields: {\n                withCredentials: true // 필요 시 추가\n            },\n            crossDomain: true,\n            headers: {\n                'Authorization': 'Bearer ' + accessToken // 헤더명 수정\n            },\n            beforeSend: function (xhr) {\n                xhr.setRequestHeader('Authorization', accessToken); // 헤더명 수정\n            },\n            success: function (orderResponseDto) {\n                console.log(orderResponseDto);\n    \n                const orders = orderResponseDto.data;\n                const orderListDiv = $('.row-table-wrapper');\n    \n                orderListDiv.empty();\n    \n                function getKoreanGenreName(genreType) {\n                    switch (genreType) {\n                        case 'MUSICAL':\n                            return '뮤지컬';\n                        case 'CONCERT':\n                            return '콘서트';\n                        case 'FESTIVAL':\n                            return '페스티벌';\n                        case 'SPORTS':\n                            return '스포츠';\n                        case 'EXHIBITION':\n                            return '전시회';\n                        case 'CLASSIC':\n                            return '클래식/무용';\n                        case 'RANKING':\n                            return '랭크';\n                        default:\n                            return '공연'; // 기본값 설정\n                    }\n                }\n    \n                function getKoreanOrderStatus(orderStatus) {\n                    switch (orderStatus) {\n                        case 'SUCCESS':\n                            return '결제완료';\n                        case 'CANCEL':\n                            return '결제취소';\n                        default:\n                            return '상태없음'; // 기본값 설정\n                    }\n                }\n    \n                orders.forEach((order, index) => {\n                    const sessionDateTime = `${order.sessionDate} ${order.sessionTime.slice(0, 5)}`;\n                    const genreRankElement = `\n                        <div class=\"row-wrapper\">\n                            <div class=\"row date\">${order.orderDate}</div>\n                            <a href=\"/performances/${order.performanceId}\">\n                            <div class=\"row title\" data-id=\"\">\n                                <img class=\"performance-image\" src=\"${order.imageUrl}\">\n                                <div class=\"info-wrapper\">\n                                    <span class=\"performance-genre\">${getKoreanGenreName(order.genreType)}</span>\n                                    <span class=\"performance-title\">${order.title}</span>\n                                    <span class=\"performance-date\">${order.startAt + \" ~ \" + order.endAt}</span>\n                                    <span class=\"performance-venue\">${order.address}</span>\n                                </div>\n                            </div>\n                            </a>\n                            <div class=\"row info\">\n                                <div class=\"info-wrapper\">\n                                    <div class=\"info-wrap\">\n                                        <span class=\"info-title\">예약번호</span>\n                                        <span class=\"info-detail view-date\">${order.orderNumber}</span>\n                                    </div>\n                                    <div class=\"info-wrap\">\n                                        <span class=\"info-title\">관람일</span>\n                                        <span class=\"info-detail\">${sessionDateTime}</span>\n                                    </div>\n                                    <div class=\"info-wrap\">\n                                        <span class=\"info-title\">매수</span>\n                                        <span class=\"info-detail\">${order.ticketCount}</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row reserve\">\n                                <div class=\"status-wrap\">\n                                    <span class=\"order-status\">${getKoreanOrderStatus(order.orderStatus)}</span>\n                                    <div class=\"cancelBtn\" data-id=\"${order.orderId}\">\n                                        취소하기\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    `;\n                    orderListDiv.append(genreRankElement);\n                    if (order.orderStatus == \"CANCEL\") {\n                        orderListDiv.find(`.cancelBtn[data-id=\"${order.orderId}\"]`).hide();\n                    }\n                });\n    \n                $('.cancelBtn').click(function () {\n                    const orderId = $(this).data('id');\n                    const confirmCancel = confirm(\"예매를 취소하시겠습니까?\");\n                    if (confirmCancel) {\n                        $.ajax({\n                            url: `http://localhost:8080/users/orders/${orderId}`,\n                            type: 'PATCH',\n                            xhrFields: {\n                                withCredentials: true // 필요 시 추가\n                            },\n                            crossDomain: true,\n                            headers: {\n                                'Authorization': 'Bearer ' + accessToken // 헤더명 수정\n                            },\n                            beforeSend: function (xhr) {\n                                xhr.setRequestHeader('Authorization', accessToken); // 헤더명 수정\n                            },\n                            success: function (userProfileResponseDto) {\n                                console.log(userProfileResponseDto);\n                                alert(\"예매가 취소되었습니다.\");\n                                loadOrders(userId); // 목록을 다시 불러와서 갱신\n                            },\n                            error: function (jqXHR) {\n                                const commentResponse = jqXHR.responseJSON;\n                                const commentResponseText = jqXHR.responseText;\n    \n                                if (commentResponse != null) {\n                                    alert(commentResponse.message);\n                                } else {\n                                    alert(commentResponseText);\n                                }\n                            }\n                        });\n                    }\n                });\n            },\n            error: function (jqXHR) {\n                const orderResponse = jqXHR.responseJSON;\n                const orderResponseText = jqXHR.responseText;\n    \n                if (orderResponse != null) {\n                    alert(orderResponse.message);\n                } else {\n                    alert(orderResponseText);\n                }\n            }\n        });\n    }\n    \n});\n\n\n"]}