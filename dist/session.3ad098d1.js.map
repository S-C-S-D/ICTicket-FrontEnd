{"version":3,"sources":["../src/components/session.js"],"names":["$","document","ready","pathParts","window","location","pathname","split","performanceId","indexOf","accessToken","localStorage","getItem","updateSeatCountMessage","length","text","addClass","updateSeatTextMargin","css","removeClass","ajax","url","concat","type","contentType","xhrFields","withCredentials","crossDomain","headers","beforeSend","xhr","setRequestHeader","success","boardResponse","console","log","sessions","data","dates","forEach","session","date","push","formatDate","dateString","Date","options","year","month","day","weekday","toLocaleDateString","formatTime","timeString","_timeString$split$map","map","Number","_timeString$split$map2","_slicedToArray","hour","minute","period","adjustedHour","String","padStart","formattedDate","append","on","selectedDate","attr","selectedSessions","empty","formattedTime","time","id","name","sessionId","seatCount","seatCountData","restSeatCount","totalSeatCount","error","jqXHR","commentResponse","responseJSON","commentResponseText","responseText","alert","message","first","click"],"mappings":"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","file":"session.3ad098d1.js","sourceRoot":"../public","sourcesContent":["$(document).ready(function () {\n    // URL에서 performanceId 추출\n    const pathParts = window.location.pathname.split('/');\n    const performanceId = pathParts[pathParts.indexOf('performances') + 1];\n    const accessToken = localStorage.getItem('Authorization');\n\n    // 초기 상태 메시지\n    function updateSeatCountMessage() {\n        if (!$('.date.active').length || !$('.session.active').length) {\n            $(\".seat-text\").text(\"날짜와 시간을 선택해 주세요\");\n            $(\".seat-count\").text(\"\");\n            $(\".reserveBtn\").addClass(\"disabled\")\n        }\n    }\n\n    // 두 요소가 모두 활성화되었는지 확인하여 seat-text의 margin-right를 업데이트하는 함수\n    function updateSeatTextMargin() {\n        if ($('.date.active').length && $('.session.active').length) {\n            $(\".seat-text\").css(\"margin-right\", \"50px\");\n            $(\".reserveBtn\").removeClass(\"disabled\")\n        } else {\n            $(\".seat-text\").css(\"margin-right\", \"\");\n        }\n    }\n\n    // [세션 조회]\n    $.ajax({\n        url: `http://localhost:8080/performances/${performanceId}/sessions`,\n        type: 'GET',\n        contentType: 'application/json',\n        xhrFields: {\n            withCredentials: true // 필요 시 추가\n        },\n        crossDomain: true,\n        headers: {\n            'Authorization': 'Bearer ' + accessToken // 헤더명 수정\n        },\n        beforeSend: function (xhr) {\n            xhr.setRequestHeader('Authorization', accessToken); // 헤더명 수정\n        },\n        success: function (boardResponse) {\n            console.log(boardResponse);\n\n            const sessions = boardResponse.data;\n            const dates = {};\n\n            // 날짜별로 세션을 그룹화\n            sessions.forEach(session => {\n                if (!dates[session.date]) {\n                    dates[session.date] = [];\n                }\n                dates[session.date].push(session);\n            });\n\n            // 날짜를 \"2024년 08월 07일 수요일\" 형식으로 변환하는 함수\n            function formatDate(dateString) {\n                const date = new Date(dateString);\n                const options = { year: 'numeric', month: 'long', day: 'numeric', weekday: 'long' };\n                return date.toLocaleDateString('ko-KR', options);\n            }\n\n            // 시간을 \"오후 12시 00분\" 형식으로 변환하는 함수\n            function formatTime(timeString) {\n                const [hour, minute] = timeString.split(':').map(Number);\n                const period = hour >= 12 ? '오후' : '오전';\n                const adjustedHour = hour % 12 || 12;\n                return `${period} ${String(adjustedHour).padStart(2, '0')}시 ${String(minute).padStart(2, '0')}분`;\n            }\n\n            // 날짜를 HTML에 추가\n            for (const date in dates) {\n                const formattedDate = formatDate(date);\n                $('.date-list-wrapper').append(`<span class=\"date\" data-date=\"${date}\">${formattedDate}</span>`);\n            }\n\n            // 날짜 클릭 이벤트 핸들러\n            $('.date-list-wrapper').on('click', '.date', function () {\n                const selectedDate = $(this).attr('data-date');\n\n                // 모든 날짜에서 active 클래스 제거하고, 클릭한 날짜에만 추가\n                $('.date').removeClass('active');\n                $(this).addClass('active');\n\n                // 선택한 날짜에 맞는 세션을 session-list-wrapper에 추가\n                const selectedSessions = dates[selectedDate];\n                $('.session-list-wrapper').empty();\n                selectedSessions.forEach(session => {\n                    const formattedTime = formatTime(session.time);\n                    $('.session-list-wrapper').append(\n                        `<span class=\"session\" data-id=\"${session.id}\">${session.name}회차 - ${formattedTime}</span>`\n                    );\n                });\n\n                // 첫 번째 세션을 기본적으로 선택된 상태로 설정\n                // $('.session').first().click();\n\n                // 좌석 메시지 업데이트\n                updateSeatCountMessage();\n\n                // seat-text margin-right 업데이트\n                updateSeatTextMargin();\n            });\n\n            // 세션 클릭 이벤트 핸들러\n            $('.session-list-wrapper').on('click', '.session', function () {\n                // 모든 세션에서 active 클래스 제거하고, 클릭한 세션에만 추가\n                $('.session').removeClass('active');\n                $(this).addClass('active');\n\n                const sessionId = $(this).attr('data-id');\n\n                // 클릭한 세션의 data-id 값을 이용하여 AJAX 요청\n                $.ajax({\n                    url: `http://localhost:8080/performances/${performanceId}/sessions/${sessionId}/seat-count`,\n                    type: 'GET',\n                    xhrFields: {\n                        withCredentials: true // 필요 시 추가\n                    },\n                    crossDomain: true,\n                    headers: {\n                        'Authorization': 'Bearer ' + accessToken // 헤더명 수정\n                    },\n                    beforeSend: function (xhr) {\n                        xhr.setRequestHeader('Authorization', accessToken); // 헤더명 수정\n                    },\n                    success: function (seatCount) {\n                        console.log(seatCount);\n                        var seatCountData = seatCount.data;\n                        $(\".seat-text\").text(\"잔여 좌석 개수\");\n                        $(\".seat-count\").text(seatCountData.restSeatCount + \"/\" + seatCountData.totalSeatCount);\n                    },\n                    error: function (jqXHR) {\n                        const commentResponse = jqXHR.responseJSON;\n                        const commentResponseText = jqXHR.responseText;\n\n                        if (commentResponse != null) {\n                            alert(commentResponse.message);\n                        } else {\n                            alert(commentResponseText);\n                        }\n                    }\n                });\n\n                // seat-text margin-right 업데이트\n                updateSeatTextMargin();\n            });\n\n            // 초기 상태로 첫 번째 날짜를 선택한 상태로 설정\n            $('.date').first().click();\n        },\n        error: function (jqXHR) {\n            const commentResponse = jqXHR.responseJSON;\n            const commentResponseText = jqXHR.responseText;\n\n            if (commentResponse != null) {\n                alert(commentResponse.message);\n            } else {\n                alert(commentResponseText);\n            }\n        }\n    });\n\n    // 초기 메시지 설정\n    updateSeatCountMessage();\n});\n"]}