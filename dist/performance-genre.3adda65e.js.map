{"version":3,"sources":["../src/components/performance-genre.js"],"names":["$","document","ready","extractAndTransformGenreType","path","window","location","pathname","genreType","split","toUpperCase","getKoreanGenreName","text","ajax","url","concat","SERVER_URL","type","success","PerformanceGenreRankResponseDto","console","log","performances","data","performanceListFlexDiv","empty","forEach","performance","index","genreRankElement","id","imageUrl","title","append","getScript","done","script","textStatus","fail","jqxhr","settings","exception","error","xhr","perforamceTodayResponse","JSON","parse","responseText","message","loadSalePerformances","page","PerformanceDiscountResponseDto","performanceListGridDiv","discountedPrice","price","discountRate","toFixed","formattedPrice","Number","toLocaleString","venueName","startAt","loadOpenSoonPerformances","openTime","openAt","pop","openDateTime","Date","replace","now","isOpen","updateCountdown","timeDifference","days","Math","floor","hours","minutes","seconds","countdownText","setInterval","hide","show","hover","find","fadeOut","fadeIn","setupPagination","containerSelector","loadFunction","on","pageNumber","removeClass","addClass"],"mappings":"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","file":"performance-genre.3adda65e.js","sourceRoot":"../public","sourcesContent":["\n$(document).ready(function () {\n    // 현재 페이지의 URL에서 장르 부분을 추출하고 대문자로 변환하는 함수\n    function extractAndTransformGenreType() {\n        const path = window.location.pathname;\n        const genreType = path.split('/')[3]; // '/performances/festival'에서 'festival'을 추출\n        return genreType.toUpperCase(); // 'festival'을 'FESTIVAL'로 변환\n    }\n\n    // 장르 타입을 추출하고 대문자로 변환\n    const genreType = extractAndTransformGenreType();\n\n    // genreType에 따라 한글 텍스트를 반환하는 함수\n    function getKoreanGenreName(genreType) {\n        switch (genreType) {\n            case 'MUSICAL':\n                return '뮤지컬';\n            case 'CONCERT':\n                return '콘서트';\n            case 'FESTIVAL':\n                return '페스티벌';\n            case 'SPORTS':\n                return '스포츠';\n            case 'EXHIBITION':\n                return '전시회';\n            case 'CLASSIC':\n                return '클래식/무용';\n            case 'RANKING':\n                return '랭크';\n            default:\n                return '공연'; // 기본값 설정\n        }\n    }\n\n\n    $(\".sale-title\").text(\"할인 중인 \" + getKoreanGenreName(genreType))\n\n    //[ 장르별 랭킹 조회 ]\n    $.ajax({\n        url: `${window.SERVER_URL}/performances/ranking?genre=${genreType}&page=1&size=10`,\n        type: 'GET',\n        success: function (PerformanceGenreRankResponseDto) {\n            console.log(PerformanceGenreRankResponseDto);\n\n            const performances = PerformanceGenreRankResponseDto.data;\n            const performanceListFlexDiv = $('.performance-list-genre');\n\n            performanceListFlexDiv.empty();\n\n            performances.forEach((performance, index) => {\n                const genreRankElement = `\n                <div class=\"performance-info\" data-id=\"${performance.id}\">\n                    <a href=\"/performances/${performance.id}\">\n                        <div class=\"image-wrapper\">\n                            <span class=\"rank absolute fs-28\">${index + 1}</span>\n                            <img src=\"${performance.imageUrl}\">\n                        </div>\n                    </a>\n                    <p class=\"performance-title fs-17 bold\">${performance.title}</p>\n                    \n                </div>\n            `;\n                performanceListFlexDiv.append(genreRankElement);\n\n            });\n\n            $.getScript('/genre-rank-swiper.0be238a9.js')\n                .done(function (script, textStatus) {\n                    console.log('genre-rank-swiper.js 스크립트가 성공적으로 로드되었습니다.');\n                })\n                .fail(function (jqxhr, settings, exception) {\n                    console.log('genre-rank-swiper.js 스크립트 로드에 실패했습니다.');\n                });\n\n\n        },\n        error: function (xhr) {\n            const perforamceTodayResponse = JSON.parse(xhr.responseText);\n            console.log(perforamceTodayResponse.message);\n        }\n    });\n\n    //[ 할인 중 조회 ]\n    function loadSalePerformances(page) {\n        $.ajax({\n            url: `${window.SERVER_URL}/performances/genre/discount?genre=${genreType}&page=${page}&size=5`,\n            type: 'GET',\n            success: function (PerformanceDiscountResponseDto) {\n                console.log(PerformanceDiscountResponseDto);\n\n                const performances = PerformanceDiscountResponseDto.data;\n                const performanceListGridDiv = $('.performance-list-grid.sale');\n\n                performanceListGridDiv.empty();\n\n                performances.forEach((performance, index) => {\n                    // 할인된 가격 계산\n                    const discountedPrice = (performance.price * (100 - performance.discountRate) * 0.01).toFixed(0);\n                    // 천 단위 쉼표 추가\n                    const formattedPrice = Number(discountedPrice).toLocaleString();\n\n                    const genreRankElement = `\n                        <div class=\"performance-info\" data-id=\"${performance.id}\">\n                            <a href=\"/performances/${performance.id}\">\n                                <div class=\"image-wrapper\">\n                                    <img src=\"${performance.imageUrl}\">\n                                </div>\n                            </a>\n                            <p class=\"performance-title fs-17 bold\">${performance.title}</p>\n                            <p class=\"venue-location fs-15 medium\">${performance.venueName}</p>\n                            <p class=\"performance-date fs-15 medium\">${performance.startAt}</p>\n                            <div class=\"sale-wrapper\">\n                                <p class=\"performance-discount-rate fs-17 black\">${performance.discountRate}%</p>\n                                <p class=\"performance-price fs-17 black\">${formattedPrice}원</p>\n                            </div>\n                        </div>\n                    `;\n                    performanceListGridDiv.append(genreRankElement);\n                });\n\n            },\n            error: function (xhr) {\n                const perforamceTodayResponse = JSON.parse(xhr.responseText);\n                console.log(perforamceTodayResponse.message);\n            }\n        });\n    }\n\n    //[ 오픈 예정 조회 ]\n    function loadOpenSoonPerformances(page) {\n        $.ajax({\n            url: `${window.SERVER_URL}/performances/genre/will-be-opened?genre=${genreType}&page=${page}&size=5`,\n            type: 'GET',\n            success: function (PerformanceDiscountResponseDto) {\n                console.log(PerformanceDiscountResponseDto);\n\n                const performances = PerformanceDiscountResponseDto.data;\n                const performanceListGridDiv = $('.performance-list-grid.open-soon');\n\n                performanceListGridDiv.empty();\n\n                performances.forEach((performance, index) => {\n\n                    // \"2024-07-26-19:00\" 형식에서 시간 부분만 추출\n                    const openTime = performance.openAt.split('-').pop();\n                    const openDateTime = new Date(performance.openAt.replace(/-/g, '/')); // Date 객체 생성\n                    const now = new Date(); // 현재 시간\n\n                    // 현재 시간이 openAt 시간을 지났는지 확인\n                    const isOpen = now >= openDateTime ? 'open' : '';\n                    const genreRankElement = `\n                            <div class=\"performance-info\" data-id=\"${performance.id}\">\n                                <a href=\"/performances/${performance.id}\">\n                                    <div class=\"image-wrapper\">\n                                        <div class=\"before-wrapper\">\n                                            <span class=\"today\">오픈까지</span>\n                                            <span class=\"open-time fs-28\">${openTime}</span>\n                                        </div>\n                                        <img src=\"${performance.imageUrl}\">\n                                    </div>\n                                </a>\n                                <p class=\"performance-title fs-17 bold\">${performance.title}</p>\n                                <p class=\"venue-location fs-15 medium\">${performance.venueName}</p>\n                                <p class=\"performance-date fs-15 medium\">${performance.startAt}</p>\n                            </div>\n                        `;\n                    performanceListGridDiv.append(genreRankElement);\n\n                    // 카운트다운 업데이트 함수\n                    function updateCountdown() {\n                        const now = new Date();\n                        const timeDifference = openDateTime - now;\n\n                        if (timeDifference > 0) {\n                            const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\n                            const hours = Math.floor((timeDifference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n                            const minutes = Math.floor((timeDifference % (1000 * 60 * 60)) / (1000 * 60));\n                            const seconds = Math.floor((timeDifference % (1000 * 60)) / 1000);\n\n                            const countdownText = `${days}일 ${hours}시간 ${minutes}분 ${seconds}초`;\n                            $(\".open-time\").text(countdownText);\n                        } else {\n\n                        }\n                    }\n\n                    // 1초마다 카운트다운 업데이트\n                    setInterval(updateCountdown, 1000);\n\n                    // 초기 카운트다운 업데이트\n                    updateCountdown();\n\n                    if (isOpen) {\n                        $(\".before-wrapper\").hide()\n                    } else {\n                        $(\".before-wrapper\").show()\n                        $('.performance-info').hover(\n                            function () {\n                                $(this).find('.before-wrapper').fadeOut(100);\n                            },\n                            function () {\n                                $(this).find('.before-wrapper').fadeIn(100);\n                            }\n                        );\n                    }\n                });\n\n            },\n            error: function (xhr) {\n                const perforamceTodayResponse = JSON.parse(xhr.responseText);\n                console.log(perforamceTodayResponse.message);\n            }\n        });\n    }\n\n    loadSalePerformances(1)\n    loadOpenSoonPerformances(1)\n\n    function setupPagination(containerSelector, loadFunction) {\n        $(containerSelector).on('click', '.page-num', function () {\n            var pageNumber = $(this).text();\n\n            $(containerSelector + ' > .page-wrapper > .page-num').removeClass('active');\n            $(this).addClass('active');\n\n            loadFunction(pageNumber);\n        });\n    }\n\n    setupPagination('.main-today-sale', loadSalePerformances);\n    setupPagination('.main-open-soon', loadOpenSoonPerformances);\n\n});"]}