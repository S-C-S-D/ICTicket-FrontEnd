{"version":3,"sources":["../src/components/home.js"],"names":["$","document","ready","isChrome","test","navigator","userAgent","vendor","alert","ajax","url","concat","window","SERVER_URL","type","success","BannerResponseDto","console","log","mainBanners","data","mainBannerListFlexDiv","mainBannerDotsDiv","empty","forEach","mainBanner","index","genreRankElement","linkUrl","bannerImageUrl","append","dotElement","getScript","done","script","textStatus","fail","jqxhr","settings","exception","error","xhr","perforamceTodayResponse","JSON","parse","responseText","message","middleBanners","length","highestPositionBanner","reduce","prev","current","position","middleBannerElement","loadPerformances","page","PerforamceTodayResponseDto","performances","performanceListGridDiv","getKoreanGenreName","genreType","performance","openTime","openAt","split","pop","openDateTime","Date","replace","now","isOpen","todayOpenElement","id","imageUrl","title","venueName","startAt","hide","show","hover","find","fadeOut","fadeIn","loadRecommandPerformances","PerformanceRecommendResponseDto","performanceRecommendResponse","loadRankingPerformances","PerformanceGenreRankResponseDto","performanceListFlexDiv","setupPagination","containerSelector","loadFunction","on","pageNumber","text","removeClass","addClass","isActive","hasClass","css"],"mappings":"AAAAA,CAAC,CAACC,QAAQ,CAAC,CAACC,KAAK,CAAC,YAAY;EAC1B,IAAIC,QAAQ,GAAG,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC,IAAI,YAAY,CAACF,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC;EACxF,IAAI,CAACJ,QAAQ,EAAE;IACXK,KAAK,CAAC,wDAAwD,CAAC;EACnE;;EAEA;EACAR,CAAC,CAACS,IAAI,CAAC;IACHC,GAAG,KAAAC,MAAA,CAAKC,MAAM,CAACC,UAAU,6BAA0B;IACnDC,IAAI,EAAE,KAAK;IACXC,OAAO,EAAE,SAAAA,QAAUC,iBAAiB,EAAE;MAClCC,OAAO,CAACC,GAAG,CAACF,iBAAiB,CAAC;MAE9B,IAAMG,WAAW,GAAGH,iBAAiB,CAACI,IAAI;MAC1C,IAAMC,qBAAqB,GAAGrB,CAAC,CAAC,6BAA6B,CAAC;MAC9D,IAAMsB,iBAAiB,GAAGtB,CAAC,CAAC,OAAO,CAAC;MAEpCqB,qBAAqB,CAACE,KAAK,CAAC,CAAC;MAE7BJ,WAAW,CAACK,OAAO,CAAC,UAACC,UAAU,EAAEC,KAAK,EAAK;QACvC,IAAMC,gBAAgB,0CAAAhB,MAAA,CACHc,UAAU,CAACG,OAAO,kDAAAjB,MAAA,CACbc,UAAU,CAACI,cAAc,oBAAAlB,MAAA,CAAec,UAAU,CAACG,OAAO,4DAE7E;QACLP,qBAAqB,CAACS,MAAM,CAACH,gBAAgB,CAAC;QAE9C,IAAMI,UAAU,oFAEP;QACTT,iBAAiB,CAACQ,MAAM,CAACC,UAAU,CAAC;MACxC,CAAC,CAAC;MACF/B,CAAC,CAACgC,SAAS,CAAC,0BAA0B,CAAC,CAClCC,IAAI,CAAC,UAAUC,MAAM,EAAEC,UAAU,EAAE;QAChClB,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;MACtD,CAAC,CAAC,CACDkB,IAAI,CAAC,UAAUC,KAAK,EAAEC,QAAQ,EAAEC,SAAS,EAAE;QACxCtB,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;MACxD,CAAC,CAAC;IACV,CAAC;IACDsB,KAAK,EAAE,SAAAA,MAAUC,GAAG,EAAE;MAClB,IAAMC,uBAAuB,GAAGC,IAAI,CAACC,KAAK,CAACH,GAAG,CAACI,YAAY,CAAC;MAC5D5B,OAAO,CAACC,GAAG,CAACwB,uBAAuB,CAACI,OAAO,CAAC;IAChD;EACJ,CAAC,CAAC;;EAEF;EACA9C,CAAC,CAACS,IAAI,CAAC;IACHC,GAAG,KAAAC,MAAA,CAAKC,MAAM,CAACC,UAAU,+BAA4B;IACrDC,IAAI,EAAE,KAAK;IACXC,OAAO,EAAE,SAAAA,QAAUC,iBAAiB,EAAE;MAClCC,OAAO,CAACC,GAAG,CAACF,iBAAiB,CAAC;MAE9B,IAAM+B,aAAa,GAAG/B,iBAAiB,CAACI,IAAI;MAC5C,IAAMC,qBAAqB,GAAGrB,CAAC,CAAC,gBAAgB,CAAC;MAEjDqB,qBAAqB,CAACE,KAAK,CAAC,CAAC;;MAE7B;MACA,IAAIwB,aAAa,CAACC,MAAM,GAAG,CAAC,EAAE;QAC1B,IAAMC,qBAAqB,GAAGF,aAAa,CAACG,MAAM,CAAC,UAACC,IAAI,EAAEC,OAAO,EAAK;UAClE,OAAQD,IAAI,CAACE,QAAQ,GAAGD,OAAO,CAACC,QAAQ,GAAIF,IAAI,GAAGC,OAAO;QAC9D,CAAC,CAAC;QAEF,IAAME,mBAAmB,sCAAA3C,MAAA,CACVsC,qBAAqB,CAACrB,OAAO,8CAAAjB,MAAA,CACxBsC,qBAAqB,CAACpB,cAAc,oBAAAlB,MAAA,CAAesC,qBAAqB,CAACrB,OAAO,oDAEnG;QACDP,qBAAqB,CAACS,MAAM,CAACwB,mBAAmB,CAAC;MACrD;IACJ,CAAC;IACDd,KAAK,EAAE,SAAAA,MAAUC,GAAG,EAAE;MAClB,IAAMC,uBAAuB,GAAGC,IAAI,CAACC,KAAK,CAACH,GAAG,CAACI,YAAY,CAAC;MAC5D5B,OAAO,CAACC,GAAG,CAACwB,uBAAuB,CAACI,OAAO,CAAC;IAChD;EACJ,CAAC,CAAC;;EAEF;EACA9C,CAAC,CAACS,IAAI,CAAC;IACHC,GAAG,KAAAC,MAAA,CAAKC,MAAM,CAACC,UAAU,+BAA4B;IACrDC,IAAI,EAAE,KAAK;IACXC,OAAO,EAAE,SAAAA,QAAUC,iBAAiB,EAAE;MAClCC,OAAO,CAACC,GAAG,CAACF,iBAAiB,CAAC;MAE9B,IAAM+B,aAAa,GAAG/B,iBAAiB,CAACI,IAAI;MAC5C,IAAMC,qBAAqB,GAAGrB,CAAC,CAAC,gBAAgB,CAAC;MAEjDqB,qBAAqB,CAACE,KAAK,CAAC,CAAC;;MAE7B;MACA,IAAIwB,aAAa,CAACC,MAAM,GAAG,CAAC,EAAE;QAC1B,IAAMC,qBAAqB,GAAGF,aAAa,CAACG,MAAM,CAAC,UAACC,IAAI,EAAEC,OAAO,EAAK;UAClE,OAAQD,IAAI,CAACE,QAAQ,GAAGD,OAAO,CAACC,QAAQ,GAAIF,IAAI,GAAGC,OAAO;QAC9D,CAAC,CAAC;QAEF,IAAME,mBAAmB,0CAAA3C,MAAA,CACNsC,qBAAqB,CAACrB,OAAO,kDAAAjB,MAAA,CACxBsC,qBAAqB,CAACpB,cAAc,oBAAAlB,MAAA,CAAesC,qBAAqB,CAACrB,OAAO,4DAEnG;QACLP,qBAAqB,CAACS,MAAM,CAACwB,mBAAmB,CAAC;MACrD;IACJ,CAAC;IACDd,KAAK,EAAE,SAAAA,MAAUC,GAAG,EAAE;MAClB,IAAMC,uBAAuB,GAAGC,IAAI,CAACC,KAAK,CAACH,GAAG,CAACI,YAAY,CAAC;MAC5D5B,OAAO,CAACC,GAAG,CAACwB,uBAAuB,CAACI,OAAO,CAAC;IAChD;EACJ,CAAC,CAAC;;EAGF;EACA,SAASS,gBAAgBA,CAACC,IAAI,EAAE;IAC5BxD,CAAC,CAACS,IAAI,CAAC;MACHC,GAAG,KAAAC,MAAA,CAAKC,MAAM,CAACC,UAAU,oCAAAF,MAAA,CAAiC6C,IAAI,aAAU;MACxE1C,IAAI,EAAE,KAAK;MACXC,OAAO,EAAE,SAAAA,QAAU0C,0BAA0B,EAAE;QAC3CxC,OAAO,CAACC,GAAG,CAACuC,0BAA0B,CAAC;QAEvC,IAAMC,YAAY,GAAGD,0BAA0B,CAACrC,IAAI;QACpD,IAAMuC,sBAAsB,GAAG3D,CAAC,CAAC,2CAA2C,CAAC;QAE7E,SAAS4D,kBAAkBA,CAACC,SAAS,EAAE;UACnC,QAAQA,SAAS;YACb,KAAK,SAAS;cACV,OAAO,KAAK;YAChB,KAAK,SAAS;cACV,OAAO,KAAK;YAChB,KAAK,UAAU;cACX,OAAO,MAAM;YACjB,KAAK,QAAQ;cACT,OAAO,KAAK;YAChB,KAAK,YAAY;cACb,OAAO,KAAK;YAChB,KAAK,SAAS;cACV,OAAO,QAAQ;YACnB,KAAK,SAAS;cACV,OAAO,IAAI;YACf;cACI,OAAO,IAAI;YAAE;UACrB;QACJ;QAEAF,sBAAsB,CAACpC,KAAK,CAAC,CAAC;QAE9BmC,YAAY,CAAClC,OAAO,CAAC,UAAAsC,WAAW,EAAI;UAChC;UACA,IAAMC,QAAQ,GAAGD,WAAW,CAACE,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC;UACpD,IAAMC,YAAY,GAAG,IAAIC,IAAI,CAACN,WAAW,CAACE,MAAM,CAACK,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;UACtE,IAAMC,GAAG,GAAG,IAAIF,IAAI,CAAC,CAAC,CAAC,CAAC;;UAExB;UACA,IAAMG,MAAM,GAAGD,GAAG,IAAIH,YAAY,GAAG,MAAM,GAAG,EAAE;UAEhD,IAAMK,gBAAgB,oDAAA7D,MAAA,CACGmD,WAAW,CAACW,EAAE,6EAAA9D,MAAA,CACMmD,WAAW,CAACW,EAAE,0JAAA9D,MAAA,CAEd4D,MAAM,sKAAA5D,MAAA,CAECoD,QAAQ,0GAAApD,MAAA,CAEhCmD,WAAW,CAACY,QAAQ,+IAAA/D,MAAA,CAGNiD,kBAAkB,CAACE,WAAW,CAACD,SAAS,CAAC,qFAAAlD,MAAA,CACjCmD,WAAW,CAACa,KAAK,iFAAAhE,MAAA,CAClBmD,WAAW,CAACc,SAAS,mFAAAjE,MAAA,CACnBmD,WAAW,CAACe,OAAO,yFAGrE;UAEDlB,sBAAsB,CAAC7B,MAAM,CAAC0C,gBAAgB,CAAC;UAG/C,IAAID,MAAM,EAAE;YACRvE,CAAC,CAAC,iBAAiB,CAAC,CAAC8E,IAAI,CAAC,CAAC;UAC/B,CAAC,MAAM;YACH9E,CAAC,CAAC,iBAAiB,CAAC,CAAC+E,IAAI,CAAC,CAAC;YAC3B/E,CAAC,CAAC,mBAAmB,CAAC,CAACgF,KAAK,CACxB,YAAY;cACRhF,CAAC,CAAC,IAAI,CAAC,CAACiF,IAAI,CAAC,iBAAiB,CAAC,CAACC,OAAO,CAAC,GAAG,CAAC;YAChD,CAAC,EACD,YAAY;cACRlF,CAAC,CAAC,IAAI,CAAC,CAACiF,IAAI,CAAC,iBAAiB,CAAC,CAACE,MAAM,CAAC,GAAG,CAAC;YAC/C,CACJ,CAAC;UACL;QACJ,CAAC,CAAC;MACN,CAAC;MACD3C,KAAK,EAAE,SAAAA,MAAUC,GAAG,EAAE;QAClB,IAAMC,uBAAuB,GAAGC,IAAI,CAACC,KAAK,CAACH,GAAG,CAACI,YAAY,CAAC;QAC5D5B,OAAO,CAACC,GAAG,CAACwB,uBAAuB,CAACI,OAAO,CAAC;MAChD;IACJ,CAAC,CAAC;EACN;;EAEA;EACA,SAASsC,yBAAyBA,CAAC5B,IAAI,EAAE;IACrCxD,CAAC,CAACS,IAAI,CAAC;MACHC,GAAG,KAAAC,MAAA,CAAKC,MAAM,CAACC,UAAU,mCAAAF,MAAA,CAAgC6C,IAAI,YAAS;MACtE1C,IAAI,EAAE,KAAK;MACXC,OAAO,EAAE,SAAAA,QAAUsE,+BAA+B,EAAE;QAChDpE,OAAO,CAACC,GAAG,CAACmE,+BAA+B,CAAC;QAE5C,IAAM3B,YAAY,GAAG2B,+BAA+B,CAACjE,IAAI;QACzD,IAAMuC,sBAAsB,GAAG3D,CAAC,CAAC,0CAA0C,CAAC;QAE5E2D,sBAAsB,CAACpC,KAAK,CAAC,CAAC;QAE9BmC,YAAY,CAAClC,OAAO,CAAC,UAAAsC,WAAW,EAAI;UAChC,IAAMU,gBAAgB,wDAAA7D,MAAA,CACOmD,WAAW,CAACW,EAAE,iFAAA9D,MAAA,CACMmD,WAAW,CAACW,EAAE,yHAAA9D,MAAA,CAEnCmD,WAAW,CAACY,QAAQ,6HAAA/D,MAAA,CAEMmD,WAAW,CAACa,KAAK,qFAAAhE,MAAA,CAClBmD,WAAW,CAACc,SAAS,uFAAAjE,MAAA,CACnBmD,WAAW,CAACe,OAAO,qGAGrE;UACLlB,sBAAsB,CAAC7B,MAAM,CAAC0C,gBAAgB,CAAC;QACnD,CAAC,CAAC;MACN,CAAC;MACDhC,KAAK,EAAE,SAAAA,MAAUC,GAAG,EAAE;QAClB,IAAM6C,4BAA4B,GAAG3C,IAAI,CAACC,KAAK,CAACH,GAAG,CAACI,YAAY,CAAC;QACjE5B,OAAO,CAACC,GAAG,CAACoE,4BAA4B,CAACxC,OAAO,CAAC;MACrD;IACJ,CAAC,CAAC;EACN;;EAEA;EACA,SAASyC,uBAAuBA,CAAC1B,SAAS,EAAE;IACxC7D,CAAC,CAACS,IAAI,CAAC;MACHC,GAAG,KAAAC,MAAA,CAAKC,MAAM,CAACC,UAAU,kCAAAF,MAAA,CAA+BkD,SAAS,oBAAiB;MAClF/C,IAAI,EAAE,KAAK;MACXC,OAAO,EAAE,SAAAA,QAAUyE,+BAA+B,EAAE;QAChDvE,OAAO,CAACC,GAAG,CAACsE,+BAA+B,CAAC;QAE5C,IAAM9B,YAAY,GAAG8B,+BAA+B,CAACpE,IAAI;QACzD,IAAMqE,sBAAsB,GAAGzF,CAAC,CAAC,yBAAyB,CAAC;QAE3DyF,sBAAsB,CAAClE,KAAK,CAAC,CAAC;QAE9BmC,YAAY,CAAClC,OAAO,CAAC,UAACsC,WAAW,EAAEpC,KAAK,EAAK;UACzC,IAAMC,gBAAgB,4DAAAhB,MAAA,CACWmD,WAAW,CAACW,EAAE,qFAAA9D,MAAA,CACMmD,WAAW,CAACW,EAAE,0JAAA9D,MAAA,CAEXe,KAAK,GAAG,CAAC,kEAAAf,MAAA,CACjCmD,WAAW,CAACY,QAAQ,qIAAA/D,MAAA,CAEMmD,WAAW,CAACa,KAAK,yFAAAhE,MAAA,CAClBmD,WAAW,CAACc,SAAS,2FAAAjE,MAAA,CACnBmD,WAAW,CAACe,OAAO,iHAGrE;UACTY,sBAAsB,CAAC3D,MAAM,CAACH,gBAAgB,CAAC;QACnD,CAAC,CAAC;QAEF3B,CAAC,CAACgC,SAAS,CAAC,+BAA+B,CAAC,CACvCC,IAAI,CAAC,UAAUC,MAAM,EAAEC,UAAU,EAAE;UAChClB,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;QAC3D,CAAC,CAAC,CACDkB,IAAI,CAAC,UAAUC,KAAK,EAAEC,QAAQ,EAAEC,SAAS,EAAE;UACxCtB,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;QACvD,CAAC,CAAC;MAEV,CAAC;MACDsB,KAAK,EAAE,SAAAA,MAAUC,GAAG,EAAE;QAClB,IAAMC,uBAAuB,GAAGC,IAAI,CAACC,KAAK,CAACH,GAAG,CAACI,YAAY,CAAC;QAC5D5B,OAAO,CAACC,GAAG,CAACwB,uBAAuB,CAACI,OAAO,CAAC;MAChD;IACJ,CAAC,CAAC;EACN;;EAEA;EACAS,gBAAgB,CAAC,CAAC,CAAC;EACnB6B,yBAAyB,CAAC,CAAC,CAAC;EAC5BG,uBAAuB,CAAC,SAAS,CAAC;;EAGlC;EACA,SAASG,eAAeA,CAACC,iBAAiB,EAAEC,YAAY,EAAE;IACtD5F,CAAC,CAAC2F,iBAAiB,CAAC,CAACE,EAAE,CAAC,OAAO,EAAE,WAAW,EAAE,YAAY;MACtD5E,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnB,IAAI4E,UAAU,GAAG9F,CAAC,CAAC,IAAI,CAAC,CAAC+F,IAAI,CAAC,CAAC;MAE/B/F,CAAC,CAAC2F,iBAAiB,GAAG,8BAA8B,CAAC,CAACK,WAAW,CAAC,QAAQ,CAAC;MAC3EhG,CAAC,CAAC,IAAI,CAAC,CAACiG,QAAQ,CAAC,QAAQ,CAAC;MAE1BL,YAAY,CAACE,UAAU,CAAC;IAC5B,CAAC,CAAC;EACN;EAEAJ,eAAe,CAAC,kBAAkB,EAAEnC,gBAAgB,CAAC;EACrDmC,eAAe,CAAC,iBAAiB,EAAEN,yBAAyB,CAAC;;EAE7D;EACApF,CAAC,CAAC,YAAY,CAAC,CAAC6F,EAAE,CAAC,OAAO,EAAE,YAAY;IACpC,IAAIhC,SAAS,GAAG7D,CAAC,CAAC,IAAI,CAAC,CAACoB,IAAI,CAAC,OAAO,CAAC;IACrC,IAAI8E,QAAQ,GAAGlG,CAAC,CAAC,IAAI,CAAC,CAACmG,QAAQ,CAAC,QAAQ,CAAC;IAEzCnG,CAAC,CAAC,YAAY,CAAC,CAACgG,WAAW,CAAC,QAAQ,CAAC;IACrChG,CAAC,CAAC,IAAI,CAAC,CAACiG,QAAQ,CAAC,QAAQ,CAAC;IAE1BV,uBAAuB,CAAC1B,SAAS,CAAC;IAElC,IAAI,CAACqC,QAAQ,EAAE;MACXlG,CAAC,CAAC,iBAAiB,CAAC,CAACoG,GAAG,CAAC,WAAW,EAAE,eAAe,CAAC;IAC1D;EACJ,CAAC,CAAC;AAIN,CAAC,CAAC","file":"home.2b8308a2.js","sourceRoot":"../public","sourcesContent":["$(document).ready(function () {\n    var isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n    if (!isChrome) {\n        alert(\"Chrome을 사용하지 않으면, 정상적인 서비스 이용이 어렵습니다. 추후에 빠르게 수정하겠습니다.\")\n    }\n\n    //[ 메인 배너 ]\n    $.ajax({\n        url: `${window.SERVER_URL}/banners?bannerType=MAIN`,\n        type: 'GET',\n        success: function (BannerResponseDto) {\n            console.log(BannerResponseDto)\n\n            const mainBanners = BannerResponseDto.data;\n            const mainBannerListFlexDiv = $('.slider-container > .slider');\n            const mainBannerDotsDiv = $('.dots');\n\n            mainBannerListFlexDiv.empty();\n\n            mainBanners.forEach((mainBanner, index) => {\n                const genreRankElement = `\n                        <a href=\"${mainBanner.linkUrl}\">\n                            <img src=\"${mainBanner.bannerImageUrl}\" data-url=\"${mainBanner.linkUrl}\">\n                        </a>\n                    `;\n                mainBannerListFlexDiv.append(genreRankElement);\n\n                const dotElement = `\n                        <span class=\"dot\"></span>\n                        `;\n                mainBannerDotsDiv.append(dotElement);\n            });\n            $.getScript('/main-banner.12c41341.js')\n                .done(function (script, textStatus) {\n                    console.log('main-banner.js 스크립트가 성공적으로 로드되었습니다.');\n                })\n                .fail(function (jqxhr, settings, exception) {\n                    console.log('genre-rank-swiper.js 스크립트 로드에 실패했습니다.');\n                });\n        },\n        error: function (xhr) {\n            const perforamceTodayResponse = JSON.parse(xhr.responseText);\n            console.log(perforamceTodayResponse.message);\n        }\n    });\n\n    //[ 미들 배너 ]\n    $.ajax({\n        url: `${window.SERVER_URL}/banners?bannerType=MIDDLE`,\n        type: 'GET',\n        success: function (BannerResponseDto) {\n            console.log(BannerResponseDto);\n\n            const middleBanners = BannerResponseDto.data;\n            const mainBannerListFlexDiv = $('.middle-banner');\n\n            mainBannerListFlexDiv.empty();\n\n            // 포지션 값이 가장 높은 배너 찾기\n            if (middleBanners.length > 0) {\n                const highestPositionBanner = middleBanners.reduce((prev, current) => {\n                    return (prev.position > current.position) ? prev : current;\n                });\n\n                const middleBannerElement = `\n                    <a href=\"${highestPositionBanner.linkUrl}\">\n                        <img src=\"${highestPositionBanner.bannerImageUrl}\" data-url=\"${highestPositionBanner.linkUrl}\">\n                    </a>\n                `;\n                mainBannerListFlexDiv.append(middleBannerElement);\n            }\n        },\n        error: function (xhr) {\n            const perforamceTodayResponse = JSON.parse(xhr.responseText);\n            console.log(perforamceTodayResponse.message);\n        }\n    });\n\n    //[ 바텀 배너 ]\n    $.ajax({\n        url: `${window.SERVER_URL}/banners?bannerType=BOTTOM`,\n        type: 'GET',\n        success: function (BannerResponseDto) {\n            console.log(BannerResponseDto);\n\n            const middleBanners = BannerResponseDto.data;\n            const mainBannerListFlexDiv = $('.bottom-banner');\n\n            mainBannerListFlexDiv.empty();\n\n            // 포지션 값이 가장 높은 배너 찾기\n            if (middleBanners.length > 0) {\n                const highestPositionBanner = middleBanners.reduce((prev, current) => {\n                    return (prev.position > current.position) ? prev : current;\n                });\n\n                const middleBannerElement = `\n                        <a href=\"${highestPositionBanner.linkUrl}\">\n                            <img src=\"${highestPositionBanner.bannerImageUrl}\" data-url=\"${highestPositionBanner.linkUrl}\">\n                        </a>\n                    `;\n                mainBannerListFlexDiv.append(middleBannerElement);\n            }\n        },\n        error: function (xhr) {\n            const perforamceTodayResponse = JSON.parse(xhr.responseText);\n            console.log(perforamceTodayResponse.message);\n        }\n    });\n\n\n    //[ 오늘 오픈 ]\n    function loadPerformances(page) {\n        $.ajax({\n            url: `${window.SERVER_URL}/performances/today-open?page=${page}&size=10`,\n            type: 'GET',\n            success: function (PerforamceTodayResponseDto) {\n                console.log(PerforamceTodayResponseDto);\n\n                const performances = PerforamceTodayResponseDto.data;\n                const performanceListGridDiv = $('.main-today-open > .performance-list-grid');\n\n                function getKoreanGenreName(genreType) {\n                    switch (genreType) {\n                        case 'MUSICAL':\n                            return '뮤지컬';\n                        case 'CONCERT':\n                            return '콘서트';\n                        case 'FESTIVAL':\n                            return '페스티벌';\n                        case 'SPORTS':\n                            return '스포츠';\n                        case 'EXHIBITION':\n                            return '전시회';\n                        case 'CLASSIC':\n                            return '클래식/무용';\n                        case 'RANKING':\n                            return '랭크';\n                        default:\n                            return '공연'; // 기본값 설정\n                    }\n                }\n\n                performanceListGridDiv.empty();\n\n                performances.forEach(performance => {\n                    // \"2024-07-26-19:00\" 형식에서 시간 부분만 추출\n                    const openTime = performance.openAt.split('-').pop();\n                    const openDateTime = new Date(performance.openAt.replace(/-/g, '/')); // Date 객체 생성\n                    const now = new Date(); // 현재 시간\n\n                    // 현재 시간이 openAt 시간을 지났는지 확인\n                    const isOpen = now >= openDateTime ? 'open' : '';\n\n                    const todayOpenElement = `\n                    <a href=\"/performances/${performance.id}\">\n                        <div class=\"performance-info\" data-id=\"${performance.id}\">\n                                <div class=\"image-wrapper today-open-temp\">\n                                    <div class=\"before-wrapper ${isOpen}\">\n                                        <span class=\"today\">오늘</span>\n                                        <span class=\"open-time fs-28\">${openTime}</span>\n                                    </div>\n                                    <img src=\"${performance.imageUrl}\">\n                                </div>\n                            \n                            <span class=\"performance-genre\">${getKoreanGenreName(performance.genreType)}</span>\n                            <p class=\"performance-title fs-17 bold\">${performance.title}</p>\n                            <p class=\"venue-location fs-15 medium\">${performance.venueName}</p>\n                            <p class=\"performance-date fs-15 medium\">${performance.startAt}</p>\n                        </div>\n                    </a>\n                    `;\n\n                    performanceListGridDiv.append(todayOpenElement);\n\n\n                    if (isOpen) {\n                        $(\".before-wrapper\").hide()\n                    } else {\n                        $(\".before-wrapper\").show()\n                        $('.performance-info').hover(\n                            function () {\n                                $(this).find('.before-wrapper').fadeOut(100);\n                            },\n                            function () {\n                                $(this).find('.before-wrapper').fadeIn(100);\n                            }\n                        );\n                    }\n                });\n            },\n            error: function (xhr) {\n                const perforamceTodayResponse = JSON.parse(xhr.responseText);\n                console.log(perforamceTodayResponse.message);\n            }\n        });\n    }\n\n    //[ 추천 티켓 ]\n    function loadRecommandPerformances(page) {\n        $.ajax({\n            url: `${window.SERVER_URL}/performances/recommend?page=${page}&size=4`,\n            type: 'GET',\n            success: function (PerformanceRecommendResponseDto) {\n                console.log(PerformanceRecommendResponseDto);\n\n                const performances = PerformanceRecommendResponseDto.data;\n                const performanceListGridDiv = $('.main-recommand > .performance-list-grid');\n\n                performanceListGridDiv.empty();\n\n                performances.forEach(performance => {\n                    const todayOpenElement = `\n                        <a href=\"/performances/${performance.id}\">\n                            <div class=\"performance-info\" data-id=\"${performance.id}\">\n                                <div class=\"image-wrapper\">\n                                    <img src=\"${performance.imageUrl}\">\n                                </div>\n                                <p class=\"performance-title fs-17 bold\">${performance.title}</p>\n                                <p class=\"venue-location fs-15 medium\">${performance.venueName}</p>\n                                <p class=\"performance-date fs-15 medium\">${performance.startAt}</p>\n                            </div>\n                        </a>\n                        `;\n                    performanceListGridDiv.append(todayOpenElement);\n                });\n            },\n            error: function (xhr) {\n                const performanceRecommendResponse = JSON.parse(xhr.responseText);\n                console.log(performanceRecommendResponse.message);\n            }\n        });\n    }\n\n    //[ 장르별 랭킹 ]\n    function loadRankingPerformances(genreType) {\n        $.ajax({\n            url: `${window.SERVER_URL}/performances/ranking?genre=${genreType}&page=1&size=10`,\n            type: 'GET',\n            success: function (PerformanceGenreRankResponseDto) {\n                console.log(PerformanceGenreRankResponseDto);\n\n                const performances = PerformanceGenreRankResponseDto.data;\n                const performanceListFlexDiv = $('.performance-list-genre');\n\n                performanceListFlexDiv.empty();\n\n                performances.forEach((performance, index) => {\n                    const genreRankElement = `\n                            <a href=\"/performances/${performance.id}\">\n                                <div class=\"performance-info\" data-id=\"${performance.id}\">\n                                    <div class=\"image-wrapper\">\n                                        <span class=\"rank absolute fs-28\">${index + 1}</span>\n                                        <img src=\"${performance.imageUrl}\">\n                                    </div>\n                                    <p class=\"performance-title fs-17 bold\">${performance.title}</p>\n                                    <p class=\"venue-location fs-15 medium\">${performance.venueName}</p>\n                                    <p class=\"performance-date fs-15 medium\">${performance.startAt}</p>\n                                </div>\n                            </a>\n                            `;\n                    performanceListFlexDiv.append(genreRankElement);\n                });\n\n                $.getScript('/main-rank-swiper.98f54644.js')\n                    .done(function (script, textStatus) {\n                        console.log('main-rank-swiper.js 스크립트가 성공적으로 로드되었습니다.');\n                    })\n                    .fail(function (jqxhr, settings, exception) {\n                        console.log('main-rank-swiper.js 스크립트 로드에 실패했습니다.');\n                    });\n\n            },\n            error: function (xhr) {\n                const perforamceTodayResponse = JSON.parse(xhr.responseText);\n                console.log(perforamceTodayResponse.message);\n            }\n        });\n    }\n\n    // [ 오늘 오픈 / 추천 티켓 ] 호출\n    loadPerformances(1);\n    loadRecommandPerformances(1);\n    loadRankingPerformances(\"CONCERT\")\n\n\n    //[ page 버튼 클릭 시, 어떤 컨테이너 안에서 눌린 넘버인지 확인하는 메서드 ]\n    function setupPagination(containerSelector, loadFunction) {\n        $(containerSelector).on('click', '.page-num', function () {\n            console.log(\"test\")\n            var pageNumber = $(this).text();\n\n            $(containerSelector + ' > .page-wrapper > .page-num').removeClass('active');\n            $(this).addClass('active');\n\n            loadFunction(pageNumber);\n        });\n    }\n\n    setupPagination('.main-today-open', loadPerformances);\n    setupPagination('.main-recommand', loadRecommandPerformances);\n\n    // 장르별 인기순위 장르 버튼 클릭 시, active 주기\n    $('.genre-btn').on('click', function () {\n        var genreType = $(this).data('genre');\n        var isActive = $(this).hasClass('active');\n\n        $('.genre-btn').removeClass('active');\n        $(this).addClass('active');\n\n        loadRankingPerformances(genreType);\n\n        if (!isActive) {\n            $('.slider-wrapper').css('transform', 'translateX(0)');\n        }\n    });\n\n\n\n});\n"]}